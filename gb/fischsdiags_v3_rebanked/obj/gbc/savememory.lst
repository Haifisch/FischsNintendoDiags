                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module savememory
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl b___func_mem_test
                                     12 	.globl ___func_mem_test
                                     13 	.globl _ram_sprite_clear
                                     14 	.globl _ram_sprite_display
                                     15 	.globl _ram_sprite_move
                                     16 	.globl _print_counter
                                     17 	.globl _init_savemem
                                     18 	.globl _inc_hiram
                                     19 	.globl _inc_ram
                                     20 	.globl _inc_end
                                     21 	.globl _inc
                                     22 	.globl b_text_print_string_bkg
                                     23 	.globl _text_print_string_bkg
                                     24 	.globl _set_sprite_palette
                                     25 	.globl _memset
                                     26 	.globl _memcpy
                                     27 	.globl _sprintf
                                     28 	.globl _EMU_printf
                                     29 	.globl _set_sprite_data
                                     30 	.globl _hiramcpy
                                     31 	.globl _delay
                                     32 	.globl _inc_hiram_var
                                     33 	.globl _inc_ram_var
                                     34 	.globl _memTestCounter
                                     35 	.globl _endData
                                     36 	.globl _results
                                     37 	.globl _firstRunByte
                                     38 	.globl _hiram_buffer
                                     39 	.globl _ram_buffer
                                     40 	.globl _save_test_result
                                     41 	.globl _check_savemem
                                     42 	.globl b_mem_test
                                     43 	.globl _mem_test
                                     44 ;--------------------------------------------------------
                                     45 ; special function registers
                                     46 ;--------------------------------------------------------
                                     47 ;--------------------------------------------------------
                                     48 ; ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area _DATA
                           00D000    51 _ram_buffer	=	0xd000
                           00FFA0    52 _hiram_buffer	=	0xffa0
                                     53 ;--------------------------------------------------------
                                     54 ; ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area _INITIALIZED
      000000                         57 ___EMU_PROFILER_INIT:
      000000                         58 	.ds 2
      000002                         59 _firstRunByte::
      000002                         60 	.ds 2
      000004                         61 _results::
      000004                         62 	.ds 2
      000006                         63 _endData::
      000006                         64 	.ds 2
      000008                         65 _memTestCounter::
      000008                         66 	.ds 2
      00000A                         67 _inc_ram_var::
      00000A                         68 	.ds 2
      00000C                         69 _inc_hiram_var::
      00000C                         70 	.ds 2
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area _DABS (ABS)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area _HOME
                                     79 	.area _GSINIT
                                     80 	.area _GSFINAL
                                     81 	.area _GSINIT
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area _HOME
                                     86 	.area _HOME
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area _CODE_1
                                     91 ;src/savememory.c:20: void inc() {
                                     92 ;	---------------------------------
                                     93 ; Function inc
                                     94 ; ---------------------------------
      000000                         95 _inc::
                                     96 ;src/savememory.c:21: memTestCounter++;
      000000 21r08r00                97 	ld	hl, #_memTestCounter
      000003 34                      98 	inc	(hl)
      000004 C0                      99 	ret	NZ
      000005 23                     100 	inc	hl
      000006 34                     101 	inc	(hl)
                                    102 ;src/savememory.c:22: }
      000007 C9                     103 	ret
                                    104 ;src/savememory.c:25: void inc_end() {} 
                                    105 ;	---------------------------------
                                    106 ; Function inc_end
                                    107 ; ---------------------------------
      000008                        108 _inc_end::
      000008 C9                     109 	ret
                                    110 ;src/savememory.c:48: void save_test_result(int testType, int testResult) {
                                    111 ;	---------------------------------
                                    112 ; Function save_test_result
                                    113 ; ---------------------------------
      000009                        114 _save_test_result::
                                    115 ;src/savememory.c:49: PRINT_FUNC_INFO;
      000009 F0r00                  116 	ldh	a, (__current_bank + 0)
      00000B 4F                     117 	ld	c, a
      00000C 06 00                  118 	ld	b, #0x00
      00000E C5                     119 	push	bc
      00000F 11r4Fr01               120 	ld	de, #___str_2
      000012 D5                     121 	push	de
      000013 11 31 00               122 	ld	de, #0x0031
      000016 D5                     123 	push	de
      000017 11r3Er01               124 	ld	de, #___str_1
      00001A D5                     125 	push	de
      00001B 11r22r01               126 	ld	de, #___str_0
      00001E D5                     127 	push	de
      00001F CDr00r00               128 	call	_EMU_printf
      000022 E8 0A                  129 	add	sp, #10
                                    130 ;src/savememory.c:53: memcpy(results->BUTTON_TEST, "OK", 2);
      000024 21r04r00               131 	ld	hl, #_results
      000027 2A                     132 	ld	a, (hl+)
      000028 4F                     133 	ld	c, a
      000029 46                     134 	ld	b, (hl)
                                    135 ;src/savememory.c:51: if (testType == 1) {
      00002A F8 02                  136 	ldhl	sp,	#2
      00002C 2A                     137 	ld	a, (hl+)
      00002D 3D                     138 	dec	a
      00002E B6                     139 	or	a, (hl)
      00002F 20 2A                  140 	jr	NZ, 00128$
                                    141 ;src/savememory.c:53: memcpy(results->BUTTON_TEST, "OK", 2);
      000031 21 07 00               142 	ld	hl, #0x0007
      000034 09                     143 	add	hl, bc
      000035 4D                     144 	ld	c, l
      000036 44                     145 	ld	b, h
                                    146 ;src/savememory.c:52: if (testResult) {
      000037 F8 05                  147 	ldhl	sp,	#5
      000039 3A                     148 	ld	a, (hl-)
      00003A B6                     149 	or	a, (hl)
      00003B 28 0F                  150 	jr	Z, 00102$
                                    151 ;src/savememory.c:53: memcpy(results->BUTTON_TEST, "OK", 2);
      00003D 11 02 00               152 	ld	de, #0x0002
      000040 D5                     153 	push	de
      000041 11r60r01               154 	ld	de, #___str_3
      000044 D5                     155 	push	de
      000045 C5                     156 	push	bc
      000046 CDr00r00               157 	call	_memcpy
      000049 E8 06                  158 	add	sp, #6
      00004B C9                     159 	ret
      00004C                        160 00102$:
                                    161 ;src/savememory.c:55: memcpy(results->BUTTON_TEST, "NO", 2);
      00004C 11 02 00               162 	ld	de, #0x0002
      00004F D5                     163 	push	de
      000050 11r63r01               164 	ld	de, #___str_4
      000053 D5                     165 	push	de
      000054 C5                     166 	push	bc
      000055 CDr00r00               167 	call	_memcpy
      000058 E8 06                  168 	add	sp, #6
      00005A C9                     169 	ret
      00005B                        170 00128$:
                                    171 ;src/savememory.c:57: } else if (testType == 2) {
      00005B F8 02                  172 	ldhl	sp,	#2
      00005D 2A                     173 	ld	a, (hl+)
      00005E D6 02                  174 	sub	a, #0x02
      000060 B6                     175 	or	a, (hl)
      000061 20 2A                  176 	jr	NZ, 00125$
                                    177 ;src/savememory.c:59: memcpy(results->DISPLAY_TEST, "OK", 2);
      000063 21 0C 00               178 	ld	hl, #0x000c
      000066 09                     179 	add	hl, bc
      000067 4D                     180 	ld	c, l
      000068 44                     181 	ld	b, h
                                    182 ;src/savememory.c:58: if (testResult) {
      000069 F8 05                  183 	ldhl	sp,	#5
      00006B 3A                     184 	ld	a, (hl-)
      00006C B6                     185 	or	a, (hl)
      00006D 28 0F                  186 	jr	Z, 00105$
                                    187 ;src/savememory.c:59: memcpy(results->DISPLAY_TEST, "OK", 2);
      00006F 11 02 00               188 	ld	de, #0x0002
      000072 D5                     189 	push	de
      000073 11r60r01               190 	ld	de, #___str_3
      000076 D5                     191 	push	de
      000077 C5                     192 	push	bc
      000078 CDr00r00               193 	call	_memcpy
      00007B E8 06                  194 	add	sp, #6
      00007D C9                     195 	ret
      00007E                        196 00105$:
                                    197 ;src/savememory.c:61: memcpy(results->DISPLAY_TEST, "NO", 2);
      00007E 11 02 00               198 	ld	de, #0x0002
      000081 D5                     199 	push	de
      000082 11r63r01               200 	ld	de, #___str_4
      000085 D5                     201 	push	de
      000086 C5                     202 	push	bc
      000087 CDr00r00               203 	call	_memcpy
      00008A E8 06                  204 	add	sp, #6
      00008C C9                     205 	ret
      00008D                        206 00125$:
                                    207 ;src/savememory.c:63: } else if (testType == 3) {
      00008D F8 02                  208 	ldhl	sp,	#2
      00008F 2A                     209 	ld	a, (hl+)
      000090 D6 03                  210 	sub	a, #0x03
      000092 B6                     211 	or	a, (hl)
      000093 20 2A                  212 	jr	NZ, 00122$
                                    213 ;src/savememory.c:65: memcpy(results->MEMORY_TEST, "OK", 2);
      000095 21 11 00               214 	ld	hl, #0x0011
      000098 09                     215 	add	hl, bc
      000099 4D                     216 	ld	c, l
      00009A 44                     217 	ld	b, h
                                    218 ;src/savememory.c:64: if (testResult) {
      00009B F8 05                  219 	ldhl	sp,	#5
      00009D 3A                     220 	ld	a, (hl-)
      00009E B6                     221 	or	a, (hl)
      00009F 28 0F                  222 	jr	Z, 00108$
                                    223 ;src/savememory.c:65: memcpy(results->MEMORY_TEST, "OK", 2);
      0000A1 11 02 00               224 	ld	de, #0x0002
      0000A4 D5                     225 	push	de
      0000A5 11r60r01               226 	ld	de, #___str_3
      0000A8 D5                     227 	push	de
      0000A9 C5                     228 	push	bc
      0000AA CDr00r00               229 	call	_memcpy
      0000AD E8 06                  230 	add	sp, #6
      0000AF C9                     231 	ret
      0000B0                        232 00108$:
                                    233 ;src/savememory.c:67: memcpy(results->MEMORY_TEST, "NO", 2);
      0000B0 11 02 00               234 	ld	de, #0x0002
      0000B3 D5                     235 	push	de
      0000B4 11r63r01               236 	ld	de, #___str_4
      0000B7 D5                     237 	push	de
      0000B8 C5                     238 	push	bc
      0000B9 CDr00r00               239 	call	_memcpy
      0000BC E8 06                  240 	add	sp, #6
      0000BE C9                     241 	ret
      0000BF                        242 00122$:
                                    243 ;src/savememory.c:69: } else if (testType == 4) {
      0000BF F8 02                  244 	ldhl	sp,	#2
      0000C1 2A                     245 	ld	a, (hl+)
      0000C2 D6 04                  246 	sub	a, #0x04
      0000C4 B6                     247 	or	a, (hl)
      0000C5 20 2A                  248 	jr	NZ, 00119$
                                    249 ;src/savememory.c:71: memcpy(results->AUDIO_TEST, "OK", 2);
      0000C7 21 16 00               250 	ld	hl, #0x0016
      0000CA 09                     251 	add	hl, bc
      0000CB 4D                     252 	ld	c, l
      0000CC 44                     253 	ld	b, h
                                    254 ;src/savememory.c:70: if (testResult) {
      0000CD F8 05                  255 	ldhl	sp,	#5
      0000CF 3A                     256 	ld	a, (hl-)
      0000D0 B6                     257 	or	a, (hl)
      0000D1 28 0F                  258 	jr	Z, 00111$
                                    259 ;src/savememory.c:71: memcpy(results->AUDIO_TEST, "OK", 2);
      0000D3 11 02 00               260 	ld	de, #0x0002
      0000D6 D5                     261 	push	de
      0000D7 11r60r01               262 	ld	de, #___str_3
      0000DA D5                     263 	push	de
      0000DB C5                     264 	push	bc
      0000DC CDr00r00               265 	call	_memcpy
      0000DF E8 06                  266 	add	sp, #6
      0000E1 C9                     267 	ret
      0000E2                        268 00111$:
                                    269 ;src/savememory.c:73: memcpy(results->AUDIO_TEST, "NO", 2);
      0000E2 11 02 00               270 	ld	de, #0x0002
      0000E5 D5                     271 	push	de
      0000E6 11r63r01               272 	ld	de, #___str_4
      0000E9 D5                     273 	push	de
      0000EA C5                     274 	push	bc
      0000EB CDr00r00               275 	call	_memcpy
      0000EE E8 06                  276 	add	sp, #6
      0000F0 C9                     277 	ret
      0000F1                        278 00119$:
                                    279 ;src/savememory.c:75: } else if (testType == 5) {
      0000F1 F8 02                  280 	ldhl	sp,	#2
      0000F3 2A                     281 	ld	a, (hl+)
      0000F4 D6 05                  282 	sub	a, #0x05
      0000F6 B6                     283 	or	a, (hl)
      0000F7 C0                     284 	ret	NZ
                                    285 ;src/savememory.c:77: memcpy(results->LINK_TEST, "OK", 2);
      0000F8 21 1B 00               286 	ld	hl, #0x001b
      0000FB 09                     287 	add	hl, bc
      0000FC 4D                     288 	ld	c, l
      0000FD 44                     289 	ld	b, h
                                    290 ;src/savememory.c:76: if (testResult) {
      0000FE F8 05                  291 	ldhl	sp,	#5
      000100 3A                     292 	ld	a, (hl-)
      000101 B6                     293 	or	a, (hl)
      000102 28 0F                  294 	jr	Z, 00114$
                                    295 ;src/savememory.c:77: memcpy(results->LINK_TEST, "OK", 2);
      000104 11 02 00               296 	ld	de, #0x0002
      000107 D5                     297 	push	de
      000108 11r60r01               298 	ld	de, #___str_3
      00010B D5                     299 	push	de
      00010C C5                     300 	push	bc
      00010D CDr00r00               301 	call	_memcpy
      000110 E8 06                  302 	add	sp, #6
      000112 C9                     303 	ret
      000113                        304 00114$:
                                    305 ;src/savememory.c:79: memcpy(results->LINK_TEST, "NO", 2);
      000113 11 02 00               306 	ld	de, #0x0002
      000116 D5                     307 	push	de
      000117 11r63r01               308 	ld	de, #___str_4
      00011A D5                     309 	push	de
      00011B C5                     310 	push	bc
      00011C CDr00r00               311 	call	_memcpy
      00011F E8 06                  312 	add	sp, #6
                                    313 ;src/savememory.c:83: }
      000121 C9                     314 	ret
      000122                        315 ___str_0:
      000122 5B 44 42 47 5D 20 25   316 	.ascii "[DBG] %s:%d @ %s() bank: %d"
             73 3A 25 64 20 40 20
             25 73 28 29 20 62 61
             6E 6B 3A 20 25 64
      00013D 00                     317 	.db 0x00
      00013E                        318 ___str_1:
      00013E 73 72 63 2F 73 61 76   319 	.ascii "src/savememory.c"
             65 6D 65 6D 6F 72 79
             2E 63
      00014E 00                     320 	.db 0x00
      00014F                        321 ___str_2:
      00014F 73 61 76 65 5F 74 65   322 	.ascii "save_test_result"
             73 74 5F 72 65 73 75
             6C 74
      00015F 00                     323 	.db 0x00
      000160                        324 ___str_3:
      000160 4F 4B                  325 	.ascii "OK"
      000162 00                     326 	.db 0x00
      000163                        327 ___str_4:
      000163 4E 4F                  328 	.ascii "NO"
      000165 00                     329 	.db 0x00
                                    330 ;src/savememory.c:86: void init_savemem() {
                                    331 ;	---------------------------------
                                    332 ; Function init_savemem
                                    333 ; ---------------------------------
      000166                        334 _init_savemem::
                                    335 ;src/savememory.c:87: PRINT_FUNC_INFO;
      000166 F0r00                  336 	ldh	a, (__current_bank + 0)
      000168 4F                     337 	ld	c, a
      000169 06 00                  338 	ld	b, #0x00
      00016B C5                     339 	push	bc
      00016C 11rFBr02               340 	ld	de, #___str_7
      00016F D5                     341 	push	de
      000170 11 57 00               342 	ld	de, #0x0057
      000173 D5                     343 	push	de
      000174 11rEAr02               344 	ld	de, #___str_6
      000177 D5                     345 	push	de
      000178 11rCEr02               346 	ld	de, #___str_5
      00017B D5                     347 	push	de
      00017C CDr00r00               348 	call	_EMU_printf
      00017F E8 0A                  349 	add	sp, #10
                                    350 ;src/savememory.c:88: for (UWORD uwI = 0xa000; uwI <= 0x7FFF; uwI+=2)
      000181 01 00 A0               351 	ld	bc, #0xa000
      000184                        352 00103$:
      000184 3E FF                  353 	ld	a, #0xff
      000186 B9                     354 	cp	a, c
      000187 3E 7F                  355 	ld	a, #0x7f
      000189 98                     356 	sbc	a, b
      00018A 38 12                  357 	jr	C, 00101$
                                    358 ;src/savememory.c:91: memcpy((UWORD *)uwI, 0x0000, sizeof(UWORD));
      00018C 59                     359 	ld	e, c
      00018D 50                     360 	ld	d, b
      00018E 21 02 00               361 	ld	hl, #0x0002
      000191 E5                     362 	push	hl
      000192 6C                     363 	ld	l, h
      000193 E5                     364 	push	hl
      000194 D5                     365 	push	de
      000195 CDr00r00               366 	call	_memcpy
      000198 E8 06                  367 	add	sp, #6
                                    368 ;src/savememory.c:88: for (UWORD uwI = 0xa000; uwI <= 0x7FFF; uwI+=2)
      00019A 03                     369 	inc	bc
      00019B 03                     370 	inc	bc
      00019C 18 E6                  371 	jr	00103$
      00019E                        372 00101$:
                                    373 ;src/savememory.c:93: memset(results, 0x0, sizeof(TEST_SAVED_RESULTS));
      00019E 21r04r00               374 	ld	hl, #_results
      0001A1 2A                     375 	ld	a, (hl+)
      0001A2 4F                     376 	ld	c, a
      0001A3 46                     377 	ld	b, (hl)
      0001A4 11 1D 00               378 	ld	de, #0x001d
      0001A7 D5                     379 	push	de
      0001A8 11 00 00               380 	ld	de, #0x0000
      0001AB D5                     381 	push	de
      0001AC C5                     382 	push	bc
      0001AD CDr00r00               383 	call	_memset
      0001B0 E8 06                  384 	add	sp, #6
                                    385 ;src/savememory.c:94: memcpy(results->magic, "fsch", 4);
      0001B2 21r04r00               386 	ld	hl, #_results
      0001B5 2A                     387 	ld	a, (hl+)
      0001B6 4F                     388 	ld	c, a
      0001B7 46                     389 	ld	b, (hl)
      0001B8 11 04 00               390 	ld	de, #0x0004
      0001BB D5                     391 	push	de
      0001BC 11r08r03               392 	ld	de, #___str_8
      0001BF D5                     393 	push	de
      0001C0 C5                     394 	push	bc
      0001C1 CDr00r00               395 	call	_memcpy
      0001C4 E8 06                  396 	add	sp, #6
                                    397 ;src/savememory.c:95: memcpy(results->BUTTON_TEST_MAGIC, "btn", 3);
      0001C6 21r04r00               398 	ld	hl, #_results
      0001C9 2A                     399 	ld	a, (hl+)
      0001CA 4F                     400 	ld	c, a
      0001CB 46                     401 	ld	b, (hl)
      0001CC 03                     402 	inc	bc
      0001CD 03                     403 	inc	bc
      0001CE 03                     404 	inc	bc
      0001CF 03                     405 	inc	bc
      0001D0 11 03 00               406 	ld	de, #0x0003
      0001D3 D5                     407 	push	de
      0001D4 11r0Dr03               408 	ld	de, #___str_9
      0001D7 D5                     409 	push	de
      0001D8 C5                     410 	push	bc
      0001D9 CDr00r00               411 	call	_memcpy
      0001DC E8 06                  412 	add	sp, #6
                                    413 ;src/savememory.c:96: memcpy(results->MEMORY_TEST_MAGIC, "mem", 3);
      0001DE 21r04r00               414 	ld	hl, #_results
      0001E1 2A                     415 	ld	a, (hl+)
      0001E2 4F                     416 	ld	c, a
      0001E3 46                     417 	ld	b, (hl)
      0001E4 21 0E 00               418 	ld	hl, #0x000e
      0001E7 09                     419 	add	hl, bc
      0001E8 11 03 00               420 	ld	de, #0x0003
      0001EB D5                     421 	push	de
      0001EC 11r11r03               422 	ld	de, #___str_10
      0001EF D5                     423 	push	de
      0001F0 E5                     424 	push	hl
      0001F1 CDr00r00               425 	call	_memcpy
      0001F4 E8 06                  426 	add	sp, #6
                                    427 ;src/savememory.c:97: memcpy(results->DISPLAY_TEST_MAGIC, "gfx", 3);
      0001F6 21r04r00               428 	ld	hl, #_results
      0001F9 2A                     429 	ld	a, (hl+)
      0001FA 4F                     430 	ld	c, a
      0001FB 46                     431 	ld	b, (hl)
      0001FC 21 09 00               432 	ld	hl, #0x0009
      0001FF 09                     433 	add	hl, bc
      000200 11 03 00               434 	ld	de, #0x0003
      000203 D5                     435 	push	de
      000204 11r15r03               436 	ld	de, #___str_11
      000207 D5                     437 	push	de
      000208 E5                     438 	push	hl
      000209 CDr00r00               439 	call	_memcpy
      00020C E8 06                  440 	add	sp, #6
                                    441 ;src/savememory.c:98: memcpy(results->AUDIO_TEST_MAGIC, "sfx", 3);
      00020E 21r04r00               442 	ld	hl, #_results
      000211 2A                     443 	ld	a, (hl+)
      000212 4F                     444 	ld	c, a
      000213 46                     445 	ld	b, (hl)
      000214 21 13 00               446 	ld	hl, #0x0013
      000217 09                     447 	add	hl, bc
      000218 11 03 00               448 	ld	de, #0x0003
      00021B D5                     449 	push	de
      00021C 11r19r03               450 	ld	de, #___str_12
      00021F D5                     451 	push	de
      000220 E5                     452 	push	hl
      000221 CDr00r00               453 	call	_memcpy
      000224 E8 06                  454 	add	sp, #6
                                    455 ;src/savememory.c:99: memcpy(results->LINK_TEST_MAGIC, "lnk", 3);
      000226 21r04r00               456 	ld	hl, #_results
      000229 2A                     457 	ld	a, (hl+)
      00022A 4F                     458 	ld	c, a
      00022B 46                     459 	ld	b, (hl)
      00022C 21 18 00               460 	ld	hl, #0x0018
      00022F 09                     461 	add	hl, bc
      000230 11 03 00               462 	ld	de, #0x0003
      000233 D5                     463 	push	de
      000234 11r1Dr03               464 	ld	de, #___str_13
      000237 D5                     465 	push	de
      000238 E5                     466 	push	hl
      000239 CDr00r00               467 	call	_memcpy
      00023C E8 06                  468 	add	sp, #6
                                    469 ;src/savememory.c:100: memcpy(results->BUTTON_TEST, "NO", 2);
      00023E 21r04r00               470 	ld	hl, #_results
      000241 2A                     471 	ld	a, (hl+)
      000242 4F                     472 	ld	c, a
      000243 46                     473 	ld	b, (hl)
      000244 21 07 00               474 	ld	hl, #0x0007
      000247 09                     475 	add	hl, bc
      000248 11 02 00               476 	ld	de, #0x0002
      00024B D5                     477 	push	de
      00024C 11r21r03               478 	ld	de, #___str_14
      00024F D5                     479 	push	de
      000250 E5                     480 	push	hl
      000251 CDr00r00               481 	call	_memcpy
      000254 E8 06                  482 	add	sp, #6
                                    483 ;src/savememory.c:101: memcpy(results->DISPLAY_TEST, "NO", 2);
      000256 21r04r00               484 	ld	hl, #_results
      000259 2A                     485 	ld	a, (hl+)
      00025A 4F                     486 	ld	c, a
      00025B 46                     487 	ld	b, (hl)
      00025C 21 0C 00               488 	ld	hl, #0x000c
      00025F 09                     489 	add	hl, bc
      000260 11 02 00               490 	ld	de, #0x0002
      000263 D5                     491 	push	de
      000264 11r21r03               492 	ld	de, #___str_14
      000267 D5                     493 	push	de
      000268 E5                     494 	push	hl
      000269 CDr00r00               495 	call	_memcpy
      00026C E8 06                  496 	add	sp, #6
                                    497 ;src/savememory.c:102: memcpy(results->MEMORY_TEST, "NO", 2);
      00026E 21r04r00               498 	ld	hl, #_results
      000271 2A                     499 	ld	a, (hl+)
      000272 4F                     500 	ld	c, a
      000273 46                     501 	ld	b, (hl)
      000274 21 11 00               502 	ld	hl, #0x0011
      000277 09                     503 	add	hl, bc
      000278 11 02 00               504 	ld	de, #0x0002
      00027B D5                     505 	push	de
      00027C 11r21r03               506 	ld	de, #___str_14
      00027F D5                     507 	push	de
      000280 E5                     508 	push	hl
      000281 CDr00r00               509 	call	_memcpy
      000284 E8 06                  510 	add	sp, #6
                                    511 ;src/savememory.c:103: memcpy(results->AUDIO_TEST, "NO", 2);
      000286 21r04r00               512 	ld	hl, #_results
      000289 2A                     513 	ld	a, (hl+)
      00028A 4F                     514 	ld	c, a
      00028B 46                     515 	ld	b, (hl)
      00028C 21 16 00               516 	ld	hl, #0x0016
      00028F 09                     517 	add	hl, bc
      000290 11 02 00               518 	ld	de, #0x0002
      000293 D5                     519 	push	de
      000294 11r21r03               520 	ld	de, #___str_14
      000297 D5                     521 	push	de
      000298 E5                     522 	push	hl
      000299 CDr00r00               523 	call	_memcpy
      00029C E8 06                  524 	add	sp, #6
                                    525 ;src/savememory.c:104: memcpy(results->LINK_TEST, "NO", 2);
      00029E 21r04r00               526 	ld	hl, #_results
      0002A1 2A                     527 	ld	a, (hl+)
      0002A2 4F                     528 	ld	c, a
      0002A3 46                     529 	ld	b, (hl)
      0002A4 21 1B 00               530 	ld	hl, #0x001b
      0002A7 09                     531 	add	hl, bc
      0002A8 11 02 00               532 	ld	de, #0x0002
      0002AB D5                     533 	push	de
      0002AC 11r21r03               534 	ld	de, #___str_14
      0002AF D5                     535 	push	de
      0002B0 E5                     536 	push	hl
      0002B1 CDr00r00               537 	call	_memcpy
      0002B4 E8 06                  538 	add	sp, #6
                                    539 ;src/savememory.c:106: endData[0] = 0x4141;
      0002B6 21r06r00               540 	ld	hl, #_endData
      0002B9 6E                     541 	ld	l, (hl)
                                    542 ;	spillPairReg hl
                                    543 ;	spillPairReg hl
      0002BA FAr07r00               544 	ld	a, (_endData + 1)
      0002BD 67                     545 	ld	h, a
                                    546 ;	spillPairReg hl
                                    547 ;	spillPairReg hl
      0002BE 3E 41                  548 	ld	a, #0x41
      0002C0 22                     549 	ld	(hl+), a
      0002C1 36 41                  550 	ld	(hl), #0x41
                                    551 ;src/savememory.c:107: firstRunByte[0] = 1;
      0002C3 21r02r00               552 	ld	hl, #_firstRunByte
      0002C6 6E                     553 	ld	l, (hl)
                                    554 ;	spillPairReg hl
                                    555 ;	spillPairReg hl
      0002C7 FAr03r00               556 	ld	a, (_firstRunByte + 1)
      0002CA 67                     557 	ld	h, a
                                    558 ;	spillPairReg hl
                                    559 ;	spillPairReg hl
      0002CB 36 01                  560 	ld	(hl), #0x01
                                    561 ;src/savememory.c:108: }
      0002CD C9                     562 	ret
      0002CE                        563 ___str_5:
      0002CE 5B 44 42 47 5D 20 25   564 	.ascii "[DBG] %s:%d @ %s() bank: %d"
             73 3A 25 64 20 40 20
             25 73 28 29 20 62 61
             6E 6B 3A 20 25 64
      0002E9 00                     565 	.db 0x00
      0002EA                        566 ___str_6:
      0002EA 73 72 63 2F 73 61 76   567 	.ascii "src/savememory.c"
             65 6D 65 6D 6F 72 79
             2E 63
      0002FA 00                     568 	.db 0x00
      0002FB                        569 ___str_7:
      0002FB 69 6E 69 74 5F 73 61   570 	.ascii "init_savemem"
             76 65 6D 65 6D
      000307 00                     571 	.db 0x00
      000308                        572 ___str_8:
      000308 66 73 63 68            573 	.ascii "fsch"
      00030C 00                     574 	.db 0x00
      00030D                        575 ___str_9:
      00030D 62 74 6E               576 	.ascii "btn"
      000310 00                     577 	.db 0x00
      000311                        578 ___str_10:
      000311 6D 65 6D               579 	.ascii "mem"
      000314 00                     580 	.db 0x00
      000315                        581 ___str_11:
      000315 67 66 78               582 	.ascii "gfx"
      000318 00                     583 	.db 0x00
      000319                        584 ___str_12:
      000319 73 66 78               585 	.ascii "sfx"
      00031C 00                     586 	.db 0x00
      00031D                        587 ___str_13:
      00031D 6C 6E 6B               588 	.ascii "lnk"
      000320 00                     589 	.db 0x00
      000321                        590 ___str_14:
      000321 4E 4F                  591 	.ascii "NO"
      000323 00                     592 	.db 0x00
                                    593 ;src/savememory.c:111: void check_savemem() {
                                    594 ;	---------------------------------
                                    595 ; Function check_savemem
                                    596 ; ---------------------------------
      000324                        597 _check_savemem::
                                    598 ;src/savememory.c:112: PRINT_FUNC_INFO;
      000324 F0r00                  599 	ldh	a, (__current_bank + 0)
      000326 4F                     600 	ld	c, a
      000327 06 00                  601 	ld	b, #0x00
      000329 C5                     602 	push	bc
      00032A 11r79r03               603 	ld	de, #___str_17
      00032D D5                     604 	push	de
      00032E 11 70 00               605 	ld	de, #0x0070
      000331 D5                     606 	push	de
      000332 11r68r03               607 	ld	de, #___str_16
      000335 D5                     608 	push	de
      000336 11r4Cr03               609 	ld	de, #___str_15
      000339 D5                     610 	push	de
      00033A CDr00r00               611 	call	_EMU_printf
      00033D E8 0A                  612 	add	sp, #10
                                    613 ;src/savememory.c:114: if (firstRunByte[0] != 0x35) {
      00033F 21r02r00               614 	ld	hl, #_firstRunByte
      000342 2A                     615 	ld	a, (hl+)
      000343 4F                     616 	ld	c, a
      000344 46                     617 	ld	b, (hl)
      000345 0A                     618 	ld	a, (bc)
      000346 D6 35                  619 	sub	a, #0x35
                                    620 ;src/savememory.c:115: init_savemem();
      000348 C2r66r01               621 	jp	NZ,_init_savemem
                                    622 ;src/savememory.c:118: }
      00034B C9                     623 	ret
      00034C                        624 ___str_15:
      00034C 5B 44 42 47 5D 20 25   625 	.ascii "[DBG] %s:%d @ %s() bank: %d"
             73 3A 25 64 20 40 20
             25 73 28 29 20 62 61
             6E 6B 3A 20 25 64
      000367 00                     626 	.db 0x00
      000368                        627 ___str_16:
      000368 73 72 63 2F 73 61 76   628 	.ascii "src/savememory.c"
             65 6D 65 6D 6F 72 79
             2E 63
      000378 00                     629 	.db 0x00
      000379                        630 ___str_17:
      000379 63 68 65 63 6B 5F 73   631 	.ascii "check_savemem"
             61 76 65 6D 65 6D
      000386 00                     632 	.db 0x00
                                    633 ;src/savememory.c:120: void print_counter() {
                                    634 ;	---------------------------------
                                    635 ; Function print_counter
                                    636 ; ---------------------------------
      000387                        637 _print_counter::
      000387 E8 F0                  638 	add	sp, #-16
                                    639 ;src/savememory.c:121: EMU_printf("counter is %u\n", memTestCounter);
      000389 21r08r00               640 	ld	hl, #_memTestCounter
      00038C 2A                     641 	ld	a, (hl+)
      00038D 5F                     642 	ld	e, a
      00038E 56                     643 	ld	d, (hl)
      00038F D5                     644 	push	de
      000390 11rC2r03               645 	ld	de, #___str_18
      000393 D5                     646 	push	de
      000394 CDr00r00               647 	call	_EMU_printf
      000397 E8 04                  648 	add	sp, #4
                                    649 ;src/savememory.c:123: sprintf(buff, "Counter is %u", memTestCounter);
      000399 F8 00                  650 	ldhl	sp,	#0
      00039B 4D                     651 	ld	c, l
      00039C 44                     652 	ld	b, h
      00039D 59                     653 	ld	e, c
      00039E 50                     654 	ld	d, b
      00039F C5                     655 	push	bc
      0003A0 21r08r00               656 	ld	hl, #_memTestCounter
      0003A3 6E                     657 	ld	l, (hl)
                                    658 ;	spillPairReg hl
                                    659 ;	spillPairReg hl
      0003A4 FAr09r00               660 	ld	a, (_memTestCounter + 1)
      0003A7 67                     661 	ld	h, a
                                    662 ;	spillPairReg hl
                                    663 ;	spillPairReg hl
      0003A8 E5                     664 	push	hl
      0003A9 21rD1r03               665 	ld	hl, #___str_19
      0003AC E5                     666 	push	hl
      0003AD D5                     667 	push	de
      0003AE CDr00r00               668 	call	_sprintf
      0003B1 E8 06                  669 	add	sp, #6
      0003B3 21 02 05               670 	ld	hl, #0x502
      0003B6 E5                     671 	push	hl
      0003B7 1Er00                  672 	ld	e, #b_text_print_string_bkg
      0003B9 21r00r00               673 	ld	hl, #_text_print_string_bkg
      0003BC CDr00r00               674 	call	___sdcc_bcall_ehl
                                    675 ;src/savememory.c:125: }
      0003BF E8 14                  676 	add	sp, #20
      0003C1 C9                     677 	ret
      0003C2                        678 ___str_18:
      0003C2 63 6F 75 6E 74 65 72   679 	.ascii "counter is %u"
             20 69 73 20 25 75
      0003CF 0A                     680 	.db 0x0a
      0003D0 00                     681 	.db 0x00
      0003D1                        682 ___str_19:
      0003D1 43 6F 75 6E 74 65 72   683 	.ascii "Counter is %u"
             20 69 73 20 25 75
      0003DE 00                     684 	.db 0x00
                                    685 ;src/savememory.c:128: void ram_sprite_move(uint8_t arrow_x, uint8_t arrow_y) {
                                    686 ;	---------------------------------
                                    687 ; Function ram_sprite_move
                                    688 ; ---------------------------------
      0003DF                        689 _ram_sprite_move::
      0003DF E8 F8                  690 	add	sp, #-8
                                    691 ;src/savememory.c:129: uint8_t arrow_x_offset = arrow_x;
      0003E1 F8 0A                  692 	ldhl	sp,	#10
      0003E3 7E                     693 	ld	a, (hl)
      0003E4 F8 02                  694 	ldhl	sp,	#2
      0003E6 77                     695 	ld	(hl), a
                                    696 ;src/savememory.c:130: uint8_t arrow_tile = 0;
      0003E7 F8 07                  697 	ldhl	sp,	#7
                                    698 ;src/savememory.c:131: for (uint8_t q = 0; q < 4; ++q)
      0003E9 AF                     699 	xor	a, a
      0003EA 32                     700 	ld	(hl-), a
      0003EB 2B                     701 	dec	hl
      0003EC 36 00                  702 	ld	(hl), #0x00
      0003EE                        703 00108$:
      0003EE F8 05                  704 	ldhl	sp,	#5
      0003F0 7E                     705 	ld	a, (hl)
      0003F1 D6 04                  706 	sub	a, #0x04
      0003F3 30 53                  707 	jr	NC, 00110$
                                    708 ;src/savememory.c:133: for (uint8_t t = 0; t < 8; ++t)
      0003F5 F8 0B                  709 	ldhl	sp,	#11
      0003F7 7E                     710 	ld	a, (hl)
      0003F8 F8 03                  711 	ldhl	sp,	#3
      0003FA 77                     712 	ld	(hl), a
      0003FB F8 07                  713 	ldhl	sp,	#7
      0003FD 3A                     714 	ld	a, (hl-)
      0003FE 22                     715 	ld	(hl+), a
      0003FF 36 00                  716 	ld	(hl), #0x00
      000401                        717 00105$:
      000401 F8 07                  718 	ldhl	sp,	#7
      000403 7E                     719 	ld	a, (hl)
      000404 D6 08                  720 	sub	a, #0x08
      000406 30 2B                  721 	jr	NC, 00116$
                                    722 ;src/savememory.c:135: move_sprite(arrow_tile, arrow_x, arrow_y);
      000408 F8 0A                  723 	ldhl	sp,	#10
      00040A 7E                     724 	ld	a, (hl)
      00040B F8 04                  725 	ldhl	sp,	#4
                                    726 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00040D 22                     727 	ld	(hl+), a
      00040E 23                     728 	inc	hl
      00040F 6E                     729 	ld	l, (hl)
      000410 26 00                  730 	ld	h, #0x00
      000412 29                     731 	add	hl, hl
      000413 29                     732 	add	hl, hl
      000414 11r00r00               733 	ld	de, #_shadow_OAM
      000417 19                     734 	add	hl, de
      000418 4D                     735 	ld	c, l
      000419 44                     736 	ld	b, h
                                    737 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00041A F8 03                  738 	ldhl	sp,	#3
      00041C 2A                     739 	ld	a, (hl+)
      00041D 02                     740 	ld	(bc), a
      00041E 03                     741 	inc	bc
      00041F 33                     742 	inc	sp
      000420 33                     743 	inc	sp
      000421 59                     744 	ld	e, c
      000422 50                     745 	ld	d, b
      000423 D5                     746 	push	de
      000424 7E                     747 	ld	a, (hl)
      000425 12                     748 	ld	(de), a
                                    749 ;src/savememory.c:136: arrow_x += 8;
      000426 7E                     750 	ld	a, (hl)
      000427 C6 08                  751 	add	a, #0x08
      000429 F8 0A                  752 	ldhl	sp,	#10
      00042B 77                     753 	ld	(hl), a
                                    754 ;src/savememory.c:137: arrow_tile++;
      00042C F8 06                  755 	ldhl	sp,	#6
      00042E 34                     756 	inc	(hl)
                                    757 ;src/savememory.c:133: for (uint8_t t = 0; t < 8; ++t)
      00042F 23                     758 	inc	hl
      000430 34                     759 	inc	(hl)
      000431 18 CE                  760 	jr	00105$
      000433                        761 00116$:
      000433 F8 06                  762 	ldhl	sp,	#6
      000435 2A                     763 	ld	a, (hl+)
      000436 77                     764 	ld	(hl), a
                                    765 ;src/savememory.c:139: arrow_y += 8;
      000437 F8 0B                  766 	ldhl	sp,	#11
      000439 7E                     767 	ld	a, (hl)
      00043A C6 08                  768 	add	a, #0x08
      00043C 77                     769 	ld	(hl), a
                                    770 ;src/savememory.c:140: arrow_x = arrow_x_offset;
      00043D F8 02                  771 	ldhl	sp,	#2
      00043F 7E                     772 	ld	a, (hl)
      000440 F8 0A                  773 	ldhl	sp,	#10
      000442 77                     774 	ld	(hl), a
                                    775 ;src/savememory.c:131: for (uint8_t q = 0; q < 4; ++q)
      000443 F8 05                  776 	ldhl	sp,	#5
      000445 34                     777 	inc	(hl)
      000446 18 A6                  778 	jr	00108$
      000448                        779 00110$:
                                    780 ;src/savememory.c:142: }
      000448 E8 08                  781 	add	sp, #8
      00044A C9                     782 	ret
                                    783 ;src/savememory.c:145: void ram_sprite_display() 
                                    784 ;	---------------------------------
                                    785 ; Function ram_sprite_display
                                    786 ; ---------------------------------
      00044B                        787 _ram_sprite_display::
      00044B E8 F8                  788 	add	sp, #-8
                                    789 ;src/savememory.c:147: SPRITES_8x8;
      00044D F0r00                  790 	ldh	a, (_LCDC_REG + 0)
      00044F E6 FB                  791 	and	a, #0xfb
      000451 E0r00                  792 	ldh	(_LCDC_REG + 0), a
                                    793 ;src/savememory.c:148: palette_color_t ram_sprite_palettes[4] = {
      000453 F8 00                  794 	ldhl	sp,	#0
      000455 4D                     795 	ld	c,l
      000456 44                     796 	ld	b,h
      000457 AF                     797 	xor	a, a
      000458 22                     798 	ld	(hl+), a
      000459 77                     799 	ld	(hl), a
      00045A 69                     800 	ld	l, c
                                    801 ;	spillPairReg hl
                                    802 ;	spillPairReg hl
      00045B 60                     803 	ld	h, b
                                    804 ;	spillPairReg hl
                                    805 ;	spillPairReg hl
      00045C 23                     806 	inc	hl
      00045D 23                     807 	inc	hl
      00045E AF                     808 	xor	a, a
      00045F 22                     809 	ld	(hl+), a
      000460 36 5C                  810 	ld	(hl), #0x5c
      000462 21 04 00               811 	ld	hl, #0x0004
      000465 09                     812 	add	hl, bc
      000466 3E 1F                  813 	ld	a, #0x1f
      000468 22                     814 	ld	(hl+), a
      000469 36 00                  815 	ld	(hl), #0x00
      00046B 21 06 00               816 	ld	hl, #0x0006
      00046E 09                     817 	add	hl, bc
      00046F 3E FF                  818 	ld	a, #0xff
      000471 22                     819 	ld	(hl+), a
      000472 36 7F                  820 	ld	(hl), #0x7f
                                    821 ;src/savememory.c:151: set_sprite_palette(0, 1, ram_sprite_palettes);
      000474 C5                     822 	push	bc
      000475 AF                     823 	xor	a, a
      000476 3C                     824 	inc	a
      000477 F5                     825 	push	af
      000478 CDr00r00               826 	call	_set_sprite_palette
      00047B E8 04                  827 	add	sp, #4
                                    828 ;src/savememory.c:152: set_sprite_data(0, RAM_SPRITE_TILE_COUNT, RAM_SPRITE);
      00047D 11r00r00               829 	ld	de, #_RAM_SPRITE
      000480 D5                     830 	push	de
      000481 21 00 20               831 	ld	hl, #0x2000
      000484 E5                     832 	push	hl
      000485 CDr00r00               833 	call	_set_sprite_data
      000488 E8 04                  834 	add	sp, #4
                                    835 ;src/savememory.c:154: uint8_t arrow_tile_idx = 0;
                                    836 ;src/savememory.c:156: for (uint8_t i = 0; i < 32; ++i)
      00048A 01 00 00               837 	ld	bc, #0x0
      00048D                        838 00104$:
      00048D 78                     839 	ld	a, b
      00048E D6 20                  840 	sub	a, #0x20
      000490 30 10                  841 	jr	NC, 00106$
                                    842 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000492 11r00r00               843 	ld	de, #_shadow_OAM+0
      000495 68                     844 	ld	l, b
                                    845 ;	spillPairReg hl
                                    846 ;	spillPairReg hl
      000496 26 00                  847 	ld	h, #0x00
                                    848 ;	spillPairReg hl
                                    849 ;	spillPairReg hl
      000498 29                     850 	add	hl, hl
      000499 29                     851 	add	hl, hl
      00049A 19                     852 	add	hl, de
      00049B 23                     853 	inc	hl
      00049C 23                     854 	inc	hl
      00049D 71                     855 	ld	(hl), c
                                    856 ;src/savememory.c:159: arrow_tile_idx += 1;
      00049E 0C                     857 	inc	c
                                    858 ;src/savememory.c:156: for (uint8_t i = 0; i < 32; ++i)
      00049F 04                     859 	inc	b
      0004A0 18 EB                  860 	jr	00104$
      0004A2                        861 00106$:
                                    862 ;src/savememory.c:161: }
      0004A2 E8 08                  863 	add	sp, #8
      0004A4 C9                     864 	ret
                                    865 ;src/savememory.c:163: void ram_sprite_clear() 
                                    866 ;	---------------------------------
                                    867 ; Function ram_sprite_clear
                                    868 ; ---------------------------------
      0004A5                        869 _ram_sprite_clear::
                                    870 ;src/savememory.c:166: for (uint8_t q = 0; q < 32; ++q)
      0004A5 0E 00                  871 	ld	c, #0x00
      0004A7                        872 00104$:
      0004A7 79                     873 	ld	a, c
      0004A8 D6 20                  874 	sub	a, #0x20
      0004AA 30 0F                  875 	jr	NC, 00101$
                                    876 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0004AC 11r00r00               877 	ld	de, #_shadow_OAM+0
      0004AF 69                     878 	ld	l, c
                                    879 ;	spillPairReg hl
                                    880 ;	spillPairReg hl
      0004B0 26 00                  881 	ld	h, #0x00
                                    882 ;	spillPairReg hl
                                    883 ;	spillPairReg hl
      0004B2 29                     884 	add	hl, hl
      0004B3 29                     885 	add	hl, hl
      0004B4 19                     886 	add	hl, de
                                    887 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0004B5 AF                     888 	xor	a, a
      0004B6 22                     889 	ld	(hl+), a
      0004B7 77                     890 	ld	(hl), a
                                    891 ;src/savememory.c:166: for (uint8_t q = 0; q < 32; ++q)
      0004B8 0C                     892 	inc	c
      0004B9 18 EC                  893 	jr	00104$
      0004BB                        894 00101$:
                                    895 ;src/savememory.c:170: HIDE_SPRITES;
      0004BB F0r00                  896 	ldh	a, (_LCDC_REG + 0)
      0004BD E6 FD                  897 	and	a, #0xfd
      0004BF E0r00                  898 	ldh	(_LCDC_REG + 0), a
                                    899 ;src/savememory.c:171: }
      0004C1 C9                     900 	ret
                                    901 ;src/savememory.c:173: BANKREF(mem_test)
                                    902 ;	---------------------------------
                                    903 ; Function __func_mem_test
                                    904 ; ---------------------------------
                           000001   905 	b___func_mem_test	= 1
      0004C2                        906 ___func_mem_test::
                                    907 	.local b___func_mem_test 
                           000001   908 	___bank_mem_test = b___func_mem_test 
                                    909 	.globl ___bank_mem_test 
                                    910 ;src/savememory.c:174: int mem_test() BANKED {
                                    911 ;	---------------------------------
                                    912 ; Function mem_test
                                    913 ; ---------------------------------
                           000001   914 	b_mem_test	= 1
      0004C2                        915 _mem_test::
                                    916 ;src/savememory.c:175: PRINT_FUNC_INFO;
      0004C2 F0r00                  917 	ldh	a, (__current_bank + 0)
      0004C4 4F                     918 	ld	c, a
      0004C5 06 00                  919 	ld	b, #0x00
      0004C7 C5                     920 	push	bc
      0004C8 11r0Cr08               921 	ld	de, #___str_22
      0004CB D5                     922 	push	de
      0004CC 11 AF 00               923 	ld	de, #0x00af
      0004CF D5                     924 	push	de
      0004D0 11rFBr07               925 	ld	de, #___str_21
      0004D3 D5                     926 	push	de
      0004D4 11rDFr07               927 	ld	de, #___str_20
      0004D7 D5                     928 	push	de
      0004D8 CDr00r00               929 	call	_EMU_printf
      0004DB E8 0A                  930 	add	sp, #10
                                    931 ;src/savememory.c:179: ram_sprite_display();
      0004DD CDr4Br04               932 	call	_ram_sprite_display
                                    933 ;src/savememory.c:180: ram_sprite_move(arrow_x, arrow_y);
      0004E0 21 48 60               934 	ld	hl, #0x6048
      0004E3 E5                     935 	push	hl
      0004E4 CDrDFr03               936 	call	_ram_sprite_move
      0004E7 E1                     937 	pop	hl
                                    938 ;src/savememory.c:181: SHOW_SPRITES;
      0004E8 F0r00                  939 	ldh	a, (_LCDC_REG + 0)
      0004EA F6 02                  940 	or	a, #0x02
      0004EC E0r00                  941 	ldh	(_LCDC_REG + 0), a
                                    942 ;src/savememory.c:183: if (memTestCounter != 0) {
      0004EE 21r09r00               943 	ld	hl, #_memTestCounter + 1
      0004F1 3A                     944 	ld	a, (hl-)
      0004F2 B6                     945 	or	a, (hl)
      0004F3 28 03                  946 	jr	Z, 00102$
                                    947 ;src/savememory.c:184: memTestCounter = 0;
      0004F5 AF                     948 	xor	a, a
      0004F6 22                     949 	ld	(hl+), a
      0004F7 77                     950 	ld	(hl), a
      0004F8                        951 00102$:
                                    952 ;src/savememory.c:190: text_print_string_bkg(TEXT_X_OFFSET, 2, "CHECKING MEMORY");
      0004F8 11r15r08               953 	ld	de, #___str_23
      0004FB D5                     954 	push	de
      0004FC 21 01 02               955 	ld	hl, #0x201
      0004FF E5                     956 	push	hl
      000500 1Er00                  957 	ld	e, #b_text_print_string_bkg
      000502 21r00r00               958 	ld	hl, #_text_print_string_bkg
      000505 CDr00r00               959 	call	___sdcc_bcall_ehl
      000508 E8 04                  960 	add	sp, #4
                                    961 ;src/savememory.c:191: if (results->magic[0] == 0x66 && results->magic[1] == 0x73 && results->magic[2] == 0x63 && results->magic[3] == 0x68) {
      00050A 21r04r00               962 	ld	hl, #_results
      00050D 2A                     963 	ld	a, (hl+)
      00050E 4F                     964 	ld	c, a
      00050F 46                     965 	ld	b, (hl)
      000510 0A                     966 	ld	a, (bc)
      000511 D6 66                  967 	sub	a, #0x66
      000513 20 31                  968 	jr	NZ, 00104$
      000515 2B                     969 	dec	hl
      000516 2A                     970 	ld	a, (hl+)
      000517 4F                     971 	ld	c, a
      000518 46                     972 	ld	b, (hl)
      000519 59                     973 	ld	e, c
      00051A 50                     974 	ld	d, b
      00051B 13                     975 	inc	de
      00051C 1A                     976 	ld	a, (de)
      00051D D6 73                  977 	sub	a, #0x73
      00051F 20 25                  978 	jr	NZ, 00104$
      000521 59                     979 	ld	e, c
      000522 50                     980 	ld	d, b
      000523 13                     981 	inc	de
      000524 13                     982 	inc	de
      000525 1A                     983 	ld	a, (de)
      000526 D6 63                  984 	sub	a, #0x63
      000528 20 1C                  985 	jr	NZ, 00104$
      00052A 03                     986 	inc	bc
      00052B 03                     987 	inc	bc
      00052C 03                     988 	inc	bc
      00052D 0A                     989 	ld	a, (bc)
      00052E D6 68                  990 	sub	a, #0x68
      000530 20 14                  991 	jr	NZ, 00104$
                                    992 ;src/savememory.c:192: text_print_string_bkg(TEXT_X_OFFSET, 3, "MAGIC OK");
      000532 11r25r08               993 	ld	de, #___str_24
      000535 D5                     994 	push	de
      000536 21 01 03               995 	ld	hl, #0x301
      000539 E5                     996 	push	hl
      00053A 1Er00                  997 	ld	e, #b_text_print_string_bkg
      00053C 21r00r00               998 	ld	hl, #_text_print_string_bkg
      00053F CDr00r00               999 	call	___sdcc_bcall_ehl
      000542 E8 04                 1000 	add	sp, #4
      000544 18 12                 1001 	jr	00105$
      000546                       1002 00104$:
                                   1003 ;src/savememory.c:194: text_print_string_bkg(TEXT_X_OFFSET, 3, "BAD MAGIC");
      000546 11r2Er08              1004 	ld	de, #___str_25
      000549 D5                    1005 	push	de
      00054A 21 01 03              1006 	ld	hl, #0x301
      00054D E5                    1007 	push	hl
      00054E 1Er00                 1008 	ld	e, #b_text_print_string_bkg
      000550 21r00r00              1009 	ld	hl, #_text_print_string_bkg
      000553 CDr00r00              1010 	call	___sdcc_bcall_ehl
      000556 E8 04                 1011 	add	sp, #4
      000558                       1012 00105$:
                                   1013 ;src/savememory.c:198: hiramcpy((uint8_t)&hiram_buffer, (void *)&inc, (uint8_t)object_distance(inc, inc_end));
      000558 3Er08                 1014 	ld	a, #<(_inc_end)
      00055A 01r00r00              1015 	ld	bc, #_inc
      00055D 59                    1016 	ld	e, c
      00055E 93                    1017 	sub	a, e
      00055F 57                    1018 	ld	d, a
      000560 3Er00                 1019 	ld	a, #<(_hiram_buffer)
      000562 D5                    1020 	push	de
      000563 33                    1021 	inc	sp
      000564 C5                    1022 	push	bc
      000565 F5                    1023 	push	af
      000566 33                    1024 	inc	sp
      000567 CDr00r00              1025 	call	_hiramcpy
      00056A E8 04                 1026 	add	sp, #4
                                   1027 ;src/savememory.c:199: memcpy(&ram_buffer, (void *)&inc, (uint16_t)object_distance(inc, inc_end));
      00056C 3Er08                 1028 	ld	a, #<(_inc_end)
      00056E 16s00                 1029 	ld	d, #>(_inc_end)
      000570 01r00r00              1030 	ld	bc, #_inc
      000573 91                    1031 	sub	a, c
      000574 5F                    1032 	ld	e, a
      000575 7A                    1033 	ld	a, d
      000576 98                    1034 	sbc	a, b
      000577 57                    1035 	ld	d, a
      000578 D5                    1036 	push	de
      000579 C5                    1037 	push	bc
      00057A 11r00r00              1038 	ld	de, #_ram_buffer
      00057D D5                    1039 	push	de
      00057E CDr00r00              1040 	call	_memcpy
      000581 E8 06                 1041 	add	sp, #6
                                   1042 ;src/savememory.c:202: text_print_string_bkg(TEXT_X_OFFSET, 4, "Call ROM");
      000583 11r38r08              1043 	ld	de, #___str_26
      000586 D5                    1044 	push	de
      000587 21 01 04              1045 	ld	hl, #0x401
      00058A E5                    1046 	push	hl
      00058B 1Er00                 1047 	ld	e, #b_text_print_string_bkg
      00058D 21r00r00              1048 	ld	hl, #_text_print_string_bkg
      000590 CDr00r00              1049 	call	___sdcc_bcall_ehl
      000593 E8 04                 1050 	add	sp, #4
                                   1051 ;src/savememory.c:203: inc();
      000595 CDr00r00              1052 	call	_inc
                                   1053 ;src/savememory.c:204: print_counter();
      000598 CDr87r03              1054 	call	_print_counter
                                   1055 ;src/savememory.c:205: if (memTestCounter != 1) {
      00059B 21r08r00              1056 	ld	hl, #_memTestCounter
      00059E 2A                    1057 	ld	a, (hl+)
      00059F 4F                    1058 	ld	c, a
      0005A0 46                    1059 	ld	b, (hl)
      0005A1 79                    1060 	ld	a, c
      0005A2 3D                    1061 	dec	a
      0005A3 B0                    1062 	or	a, b
      0005A4 28 30                 1063 	jr	Z, 00110$
                                   1064 ;src/savememory.c:206: text_print_string_bkg(TEXT_X_OFFSET, 6, "Bad counter...");
      0005A6 11r41r08              1065 	ld	de, #___str_27
      0005A9 D5                    1066 	push	de
      0005AA 21 01 06              1067 	ld	hl, #0x601
      0005AD E5                    1068 	push	hl
      0005AE 1Er00                 1069 	ld	e, #b_text_print_string_bkg
      0005B0 21r00r00              1070 	ld	hl, #_text_print_string_bkg
      0005B3 CDr00r00              1071 	call	___sdcc_bcall_ehl
      0005B6 E8 04                 1072 	add	sp, #4
                                   1073 ;src/savememory.c:207: text_print_string_bkg(TEXT_X_OFFSET, 8, "TEST FAILED");
      0005B8 11r50r08              1074 	ld	de, #___str_28
      0005BB D5                    1075 	push	de
      0005BC 21 01 08              1076 	ld	hl, #0x801
      0005BF E5                    1077 	push	hl
      0005C0 1Er00                 1078 	ld	e, #b_text_print_string_bkg
      0005C2 21r00r00              1079 	ld	hl, #_text_print_string_bkg
      0005C5 CDr00r00              1080 	call	___sdcc_bcall_ehl
      0005C8 E8 04                 1081 	add	sp, #4
                                   1082 ;src/savememory.c:208: delay(5000);
      0005CA 11 88 13              1083 	ld	de, #0x1388
      0005CD D5                    1084 	push	de
      0005CE CDr00r00              1085 	call	_delay
      0005D1 E1                    1086 	pop	hl
                                   1087 ;src/savememory.c:209: return TEST_FAILED;
      0005D2 11 69 00              1088 	ld	de, #0x0069
      0005D5 C9                    1089 	ret
      0005D6                       1090 00110$:
                                   1091 ;src/savememory.c:213: ram_sprite_move(arrow_x, arrow_y);
      0005D6 21 28 70              1092 	ld	hl, #0x7028
      0005D9 E5                    1093 	push	hl
      0005DA CDrDFr03              1094 	call	_ram_sprite_move
      0005DD E1                    1095 	pop	hl
                                   1096 ;src/savememory.c:214: delay(1000);
      0005DE 11 E8 03              1097 	ld	de, #0x03e8
      0005E1 D5                    1098 	push	de
      0005E2 CDr00r00              1099 	call	_delay
      0005E5 E1                    1100 	pop	hl
                                   1101 ;src/savememory.c:217: text_print_string_bkg(TEXT_X_OFFSET, 4, "Call RAM indirect");
      0005E6 11r5Cr08              1102 	ld	de, #___str_29
      0005E9 D5                    1103 	push	de
      0005EA 21 01 04              1104 	ld	hl, #0x401
      0005ED E5                    1105 	push	hl
      0005EE 1Er00                 1106 	ld	e, #b_text_print_string_bkg
      0005F0 21r00r00              1107 	ld	hl, #_text_print_string_bkg
      0005F3 CDr00r00              1108 	call	___sdcc_bcall_ehl
      0005F6 E8 04                 1109 	add	sp, #4
                                   1110 ;src/savememory.c:218: inc_ram();
      0005F8 CDr00r00              1111 	call	_inc_ram
                                   1112 ;src/savememory.c:219: print_counter();
      0005FB CDr87r03              1113 	call	_print_counter
                                   1114 ;src/savememory.c:220: if (memTestCounter != 2) {
      0005FE 21r08r00              1115 	ld	hl, #_memTestCounter
      000601 2A                    1116 	ld	a, (hl+)
      000602 4F                    1117 	ld	c, a
      000603 46                    1118 	ld	b, (hl)
      000604 79                    1119 	ld	a, c
      000605 D6 02                 1120 	sub	a, #0x02
      000607 B0                    1121 	or	a, b
      000608 28 30                 1122 	jr	Z, 00112$
                                   1123 ;src/savememory.c:221: text_print_string_bkg(TEXT_X_OFFSET, 6, "Bad counter...");
      00060A 11r41r08              1124 	ld	de, #___str_27
      00060D D5                    1125 	push	de
      00060E 21 01 06              1126 	ld	hl, #0x601
      000611 E5                    1127 	push	hl
      000612 1Er00                 1128 	ld	e, #b_text_print_string_bkg
      000614 21r00r00              1129 	ld	hl, #_text_print_string_bkg
      000617 CDr00r00              1130 	call	___sdcc_bcall_ehl
      00061A E8 04                 1131 	add	sp, #4
                                   1132 ;src/savememory.c:222: text_print_string_bkg(TEXT_X_OFFSET, 8, "TEST FAILED");
      00061C 11r50r08              1133 	ld	de, #___str_28
      00061F D5                    1134 	push	de
      000620 21 01 08              1135 	ld	hl, #0x801
      000623 E5                    1136 	push	hl
      000624 1Er00                 1137 	ld	e, #b_text_print_string_bkg
      000626 21r00r00              1138 	ld	hl, #_text_print_string_bkg
      000629 CDr00r00              1139 	call	___sdcc_bcall_ehl
      00062C E8 04                 1140 	add	sp, #4
                                   1141 ;src/savememory.c:223: delay(5000);
      00062E 11 88 13              1142 	ld	de, #0x1388
      000631 D5                    1143 	push	de
      000632 CDr00r00              1144 	call	_delay
      000635 E1                    1145 	pop	hl
                                   1146 ;src/savememory.c:224: return TEST_FAILED;
      000636 11 69 00              1147 	ld	de, #0x0069
      000639 C9                    1148 	ret
      00063A                       1149 00112$:
                                   1150 ;src/savememory.c:228: ram_sprite_move(arrow_x, arrow_y);
      00063A 21 18 78              1151 	ld	hl, #0x7818
      00063D E5                    1152 	push	hl
      00063E CDrDFr03              1153 	call	_ram_sprite_move
      000641 E1                    1154 	pop	hl
                                   1155 ;src/savememory.c:229: delay(1000);
      000642 11 E8 03              1156 	ld	de, #0x03e8
      000645 D5                    1157 	push	de
      000646 CDr00r00              1158 	call	_delay
      000649 E1                    1159 	pop	hl
                                   1160 ;src/savememory.c:232: text_print_string_bkg(TEXT_X_OFFSET, 4, "Call RAM indirect");
      00064A 11r5Cr08              1161 	ld	de, #___str_29
      00064D D5                    1162 	push	de
      00064E 21 01 04              1163 	ld	hl, #0x401
      000651 E5                    1164 	push	hl
      000652 1Er00                 1165 	ld	e, #b_text_print_string_bkg
      000654 21r00r00              1166 	ld	hl, #_text_print_string_bkg
      000657 CDr00r00              1167 	call	___sdcc_bcall_ehl
      00065A E8 04                 1168 	add	sp, #4
                                   1169 ;src/savememory.c:233: inc_ram_var();
      00065C 21r0Ar00              1170 	ld	hl, #_inc_ram_var
      00065F 6E                    1171 	ld	l, (hl)
                                   1172 ;	spillPairReg hl
                                   1173 ;	spillPairReg hl
      000660 FAr0Br00              1174 	ld	a, (_inc_ram_var + 1)
      000663 67                    1175 	ld	h, a
                                   1176 ;	spillPairReg hl
                                   1177 ;	spillPairReg hl
      000664 CDr00r00              1178 	call	___sdcc_call_hl
                                   1179 ;src/savememory.c:234: print_counter();
      000667 CDr87r03              1180 	call	_print_counter
                                   1181 ;src/savememory.c:235: if (memTestCounter != 3) {
      00066A 21r08r00              1182 	ld	hl, #_memTestCounter
      00066D 2A                    1183 	ld	a, (hl+)
      00066E 4F                    1184 	ld	c, a
      00066F 46                    1185 	ld	b, (hl)
      000670 79                    1186 	ld	a, c
      000671 D6 03                 1187 	sub	a, #0x03
      000673 B0                    1188 	or	a, b
      000674 28 30                 1189 	jr	Z, 00114$
                                   1190 ;src/savememory.c:236: text_print_string_bkg(TEXT_X_OFFSET, 6, "Bad counter...");
      000676 11r41r08              1191 	ld	de, #___str_27
      000679 D5                    1192 	push	de
      00067A 21 01 06              1193 	ld	hl, #0x601
      00067D E5                    1194 	push	hl
      00067E 1Er00                 1195 	ld	e, #b_text_print_string_bkg
      000680 21r00r00              1196 	ld	hl, #_text_print_string_bkg
      000683 CDr00r00              1197 	call	___sdcc_bcall_ehl
      000686 E8 04                 1198 	add	sp, #4
                                   1199 ;src/savememory.c:237: text_print_string_bkg(TEXT_X_OFFSET, 8, "TEST FAILED");
      000688 11r50r08              1200 	ld	de, #___str_28
      00068B D5                    1201 	push	de
      00068C 21 01 08              1202 	ld	hl, #0x801
      00068F E5                    1203 	push	hl
      000690 1Er00                 1204 	ld	e, #b_text_print_string_bkg
      000692 21r00r00              1205 	ld	hl, #_text_print_string_bkg
      000695 CDr00r00              1206 	call	___sdcc_bcall_ehl
      000698 E8 04                 1207 	add	sp, #4
                                   1208 ;src/savememory.c:238: delay(5000);
      00069A 11 88 13              1209 	ld	de, #0x1388
      00069D D5                    1210 	push	de
      00069E CDr00r00              1211 	call	_delay
      0006A1 E1                    1212 	pop	hl
                                   1213 ;src/savememory.c:239: return TEST_FAILED;
      0006A2 11 69 00              1214 	ld	de, #0x0069
      0006A5 C9                    1215 	ret
      0006A6                       1216 00114$:
                                   1217 ;src/savememory.c:243: ram_sprite_move(arrow_x, arrow_y);
      0006A6 21 28 68              1218 	ld	hl, #0x6828
      0006A9 E5                    1219 	push	hl
      0006AA CDrDFr03              1220 	call	_ram_sprite_move
      0006AD E1                    1221 	pop	hl
                                   1222 ;src/savememory.c:244: delay(1000);
      0006AE 11 E8 03              1223 	ld	de, #0x03e8
      0006B1 D5                    1224 	push	de
      0006B2 CDr00r00              1225 	call	_delay
      0006B5 E1                    1226 	pop	hl
                                   1227 ;src/savememory.c:247: text_print_string_bkg(TEXT_X_OFFSET, 4, "Call HIRAM         ");
      0006B6 11r6Er08              1228 	ld	de, #___str_30
      0006B9 D5                    1229 	push	de
      0006BA 21 01 04              1230 	ld	hl, #0x401
      0006BD E5                    1231 	push	hl
      0006BE 1Er00                 1232 	ld	e, #b_text_print_string_bkg
      0006C0 21r00r00              1233 	ld	hl, #_text_print_string_bkg
      0006C3 CDr00r00              1234 	call	___sdcc_bcall_ehl
      0006C6 E8 04                 1235 	add	sp, #4
                                   1236 ;src/savememory.c:248: inc_hiram();
      0006C8 CDr00r00              1237 	call	_inc_hiram
                                   1238 ;src/savememory.c:249: print_counter();
      0006CB CDr87r03              1239 	call	_print_counter
                                   1240 ;src/savememory.c:250: if (memTestCounter != 4) {
      0006CE 21r08r00              1241 	ld	hl, #_memTestCounter
      0006D1 2A                    1242 	ld	a, (hl+)
      0006D2 4F                    1243 	ld	c, a
      0006D3 46                    1244 	ld	b, (hl)
      0006D4 79                    1245 	ld	a, c
      0006D5 D6 04                 1246 	sub	a, #0x04
      0006D7 B0                    1247 	or	a, b
      0006D8 28 30                 1248 	jr	Z, 00116$
                                   1249 ;src/savememory.c:251: text_print_string_bkg(TEXT_X_OFFSET, 6, "Bad counter...");
      0006DA 11r41r08              1250 	ld	de, #___str_27
      0006DD D5                    1251 	push	de
      0006DE 21 01 06              1252 	ld	hl, #0x601
      0006E1 E5                    1253 	push	hl
      0006E2 1Er00                 1254 	ld	e, #b_text_print_string_bkg
      0006E4 21r00r00              1255 	ld	hl, #_text_print_string_bkg
      0006E7 CDr00r00              1256 	call	___sdcc_bcall_ehl
      0006EA E8 04                 1257 	add	sp, #4
                                   1258 ;src/savememory.c:252: text_print_string_bkg(TEXT_X_OFFSET, 8, "TEST FAILED");
      0006EC 11r50r08              1259 	ld	de, #___str_28
      0006EF D5                    1260 	push	de
      0006F0 21 01 08              1261 	ld	hl, #0x801
      0006F3 E5                    1262 	push	hl
      0006F4 1Er00                 1263 	ld	e, #b_text_print_string_bkg
      0006F6 21r00r00              1264 	ld	hl, #_text_print_string_bkg
      0006F9 CDr00r00              1265 	call	___sdcc_bcall_ehl
      0006FC E8 04                 1266 	add	sp, #4
                                   1267 ;src/savememory.c:253: delay(5000);
      0006FE 11 88 13              1268 	ld	de, #0x1388
      000701 D5                    1269 	push	de
      000702 CDr00r00              1270 	call	_delay
      000705 E1                    1271 	pop	hl
                                   1272 ;src/savememory.c:254: return TEST_FAILED;
      000706 11 69 00              1273 	ld	de, #0x0069
      000709 C9                    1274 	ret
      00070A                       1275 00116$:
                                   1276 ;src/savememory.c:258: ram_sprite_move(arrow_x, arrow_y);
      00070A 21 38 60              1277 	ld	hl, #0x6038
      00070D E5                    1278 	push	hl
      00070E CDrDFr03              1279 	call	_ram_sprite_move
      000711 E1                    1280 	pop	hl
                                   1281 ;src/savememory.c:259: delay(1000);
      000712 11 E8 03              1282 	ld	de, #0x03e8
      000715 D5                    1283 	push	de
      000716 CDr00r00              1284 	call	_delay
      000719 E1                    1285 	pop	hl
                                   1286 ;src/savememory.c:262: text_print_string_bkg(TEXT_X_OFFSET, 4, "Call HIRAM indirect");
      00071A 11r82r08              1287 	ld	de, #___str_31
      00071D D5                    1288 	push	de
      00071E 21 01 04              1289 	ld	hl, #0x401
      000721 E5                    1290 	push	hl
      000722 1Er00                 1291 	ld	e, #b_text_print_string_bkg
      000724 21r00r00              1292 	ld	hl, #_text_print_string_bkg
      000727 CDr00r00              1293 	call	___sdcc_bcall_ehl
      00072A E8 04                 1294 	add	sp, #4
                                   1295 ;src/savememory.c:263: inc_hiram_var();
      00072C 21r0Cr00              1296 	ld	hl, #_inc_hiram_var
      00072F 6E                    1297 	ld	l, (hl)
                                   1298 ;	spillPairReg hl
                                   1299 ;	spillPairReg hl
      000730 FAr0Dr00              1300 	ld	a, (_inc_hiram_var + 1)
      000733 67                    1301 	ld	h, a
                                   1302 ;	spillPairReg hl
                                   1303 ;	spillPairReg hl
      000734 CDr00r00              1304 	call	___sdcc_call_hl
                                   1305 ;src/savememory.c:264: print_counter();
      000737 CDr87r03              1306 	call	_print_counter
                                   1307 ;src/savememory.c:265: if (memTestCounter != 5) {
      00073A 21r08r00              1308 	ld	hl, #_memTestCounter
      00073D 2A                    1309 	ld	a, (hl+)
      00073E 4F                    1310 	ld	c, a
      00073F 46                    1311 	ld	b, (hl)
      000740 79                    1312 	ld	a, c
      000741 D6 05                 1313 	sub	a, #0x05
      000743 B0                    1314 	or	a, b
      000744 28 30                 1315 	jr	Z, 00118$
                                   1316 ;src/savememory.c:266: text_print_string_bkg(TEXT_X_OFFSET, 6, "Bad counter...");
      000746 11r41r08              1317 	ld	de, #___str_27
      000749 D5                    1318 	push	de
      00074A 21 01 06              1319 	ld	hl, #0x601
      00074D E5                    1320 	push	hl
      00074E 1Er00                 1321 	ld	e, #b_text_print_string_bkg
      000750 21r00r00              1322 	ld	hl, #_text_print_string_bkg
      000753 CDr00r00              1323 	call	___sdcc_bcall_ehl
      000756 E8 04                 1324 	add	sp, #4
                                   1325 ;src/savememory.c:267: text_print_string_bkg(TEXT_X_OFFSET, 8, "TEST FAILED");
      000758 11r50r08              1326 	ld	de, #___str_28
      00075B D5                    1327 	push	de
      00075C 21 01 08              1328 	ld	hl, #0x801
      00075F E5                    1329 	push	hl
      000760 1Er00                 1330 	ld	e, #b_text_print_string_bkg
      000762 21r00r00              1331 	ld	hl, #_text_print_string_bkg
      000765 CDr00r00              1332 	call	___sdcc_bcall_ehl
      000768 E8 04                 1333 	add	sp, #4
                                   1334 ;src/savememory.c:268: delay(5000);
      00076A 11 88 13              1335 	ld	de, #0x1388
      00076D D5                    1336 	push	de
      00076E CDr00r00              1337 	call	_delay
      000771 E1                    1338 	pop	hl
                                   1339 ;src/savememory.c:269: return TEST_FAILED;
      000772 11 69 00              1340 	ld	de, #0x0069
      000775 C9                    1341 	ret
      000776                       1342 00118$:
                                   1343 ;src/savememory.c:273: ram_sprite_move(arrow_x, arrow_y);
      000776 21 40 70              1344 	ld	hl, #0x7040
      000779 E5                    1345 	push	hl
      00077A CDrDFr03              1346 	call	_ram_sprite_move
      00077D E1                    1347 	pop	hl
                                   1348 ;src/savememory.c:274: delay(1000);
      00077E 11 E8 03              1349 	ld	de, #0x03e8
      000781 D5                    1350 	push	de
      000782 CDr00r00              1351 	call	_delay
      000785 E1                    1352 	pop	hl
                                   1353 ;src/savememory.c:275: text_print_string_bkg(TEXT_X_OFFSET, 8, "TEST PASSED");
      000786 11r96r08              1354 	ld	de, #___str_32
      000789 D5                    1355 	push	de
      00078A 21 01 08              1356 	ld	hl, #0x801
      00078D E5                    1357 	push	hl
      00078E 1Er00                 1358 	ld	e, #b_text_print_string_bkg
      000790 21r00r00              1359 	ld	hl, #_text_print_string_bkg
      000793 CDr00r00              1360 	call	___sdcc_bcall_ehl
      000796 E8 04                 1361 	add	sp, #4
                                   1362 ;src/savememory.c:278: ram_sprite_move(arrow_x, arrow_y);
      000798 21 48 78              1363 	ld	hl, #0x7848
      00079B E5                    1364 	push	hl
      00079C CDrDFr03              1365 	call	_ram_sprite_move
      00079F E1                    1366 	pop	hl
                                   1367 ;src/savememory.c:279: delay(1000);
      0007A0 11 E8 03              1368 	ld	de, #0x03e8
      0007A3 D5                    1369 	push	de
      0007A4 CDr00r00              1370 	call	_delay
      0007A7 E1                    1371 	pop	hl
                                   1372 ;src/savememory.c:282: ram_sprite_move(arrow_x, arrow_y);
      0007A8 21 40 70              1373 	ld	hl, #0x7040
      0007AB E5                    1374 	push	hl
      0007AC CDrDFr03              1375 	call	_ram_sprite_move
      0007AF E1                    1376 	pop	hl
                                   1377 ;src/savememory.c:283: delay(1000);
      0007B0 11 E8 03              1378 	ld	de, #0x03e8
      0007B3 D5                    1379 	push	de
      0007B4 CDr00r00              1380 	call	_delay
      0007B7 E1                    1381 	pop	hl
                                   1382 ;src/savememory.c:286: ram_sprite_move(arrow_x, arrow_y);
      0007B8 21 60 60              1383 	ld	hl, #0x6060
      0007BB E5                    1384 	push	hl
      0007BC CDrDFr03              1385 	call	_ram_sprite_move
      0007BF E1                    1386 	pop	hl
                                   1387 ;src/savememory.c:287: delay(1000);
      0007C0 11 E8 03              1388 	ld	de, #0x03e8
      0007C3 D5                    1389 	push	de
      0007C4 CDr00r00              1390 	call	_delay
      0007C7 E1                    1391 	pop	hl
                                   1392 ;src/savememory.c:290: ram_sprite_move(arrow_x, arrow_y);
      0007C8 21 50 58              1393 	ld	hl, #0x5850
      0007CB E5                    1394 	push	hl
      0007CC CDrDFr03              1395 	call	_ram_sprite_move
      0007CF E1                    1396 	pop	hl
                                   1397 ;src/savememory.c:291: delay(1000);
      0007D0 11 E8 03              1398 	ld	de, #0x03e8
      0007D3 D5                    1399 	push	de
      0007D4 CDr00r00              1400 	call	_delay
      0007D7 E1                    1401 	pop	hl
                                   1402 ;src/savememory.c:292: ram_sprite_clear();
      0007D8 CDrA5r04              1403 	call	_ram_sprite_clear
                                   1404 ;src/savememory.c:293: return TEST_PASSED;
      0007DB 11 25 00              1405 	ld	de, #0x0025
                                   1406 ;src/savememory.c:294: }
      0007DE C9                    1407 	ret
      0007DF                       1408 ___str_20:
      0007DF 5B 44 42 47 5D 20 25  1409 	.ascii "[DBG] %s:%d @ %s() bank: %d"
             73 3A 25 64 20 40 20
             25 73 28 29 20 62 61
             6E 6B 3A 20 25 64
      0007FA 00                    1410 	.db 0x00
      0007FB                       1411 ___str_21:
      0007FB 73 72 63 2F 73 61 76  1412 	.ascii "src/savememory.c"
             65 6D 65 6D 6F 72 79
             2E 63
      00080B 00                    1413 	.db 0x00
      00080C                       1414 ___str_22:
      00080C 6D 65 6D 5F 74 65 73  1415 	.ascii "mem_test"
             74
      000814 00                    1416 	.db 0x00
      000815                       1417 ___str_23:
      000815 43 48 45 43 4B 49 4E  1418 	.ascii "CHECKING MEMORY"
             47 20 4D 45 4D 4F 52
             59
      000824 00                    1419 	.db 0x00
      000825                       1420 ___str_24:
      000825 4D 41 47 49 43 20 4F  1421 	.ascii "MAGIC OK"
             4B
      00082D 00                    1422 	.db 0x00
      00082E                       1423 ___str_25:
      00082E 42 41 44 20 4D 41 47  1424 	.ascii "BAD MAGIC"
             49 43
      000837 00                    1425 	.db 0x00
      000838                       1426 ___str_26:
      000838 43 61 6C 6C 20 52 4F  1427 	.ascii "Call ROM"
             4D
      000840 00                    1428 	.db 0x00
      000841                       1429 ___str_27:
      000841 42 61 64 20 63 6F 75  1430 	.ascii "Bad counter..."
             6E 74 65 72 2E 2E 2E
      00084F 00                    1431 	.db 0x00
      000850                       1432 ___str_28:
      000850 54 45 53 54 20 46 41  1433 	.ascii "TEST FAILED"
             49 4C 45 44
      00085B 00                    1434 	.db 0x00
      00085C                       1435 ___str_29:
      00085C 43 61 6C 6C 20 52 41  1436 	.ascii "Call RAM indirect"
             4D 20 69 6E 64 69 72
             65 63 74
      00086D 00                    1437 	.db 0x00
      00086E                       1438 ___str_30:
      00086E 43 61 6C 6C 20 48 49  1439 	.ascii "Call HIRAM         "
             52 41 4D 20 20 20 20
             20 20 20 20 20
      000881 00                    1440 	.db 0x00
      000882                       1441 ___str_31:
      000882 43 61 6C 6C 20 48 49  1442 	.ascii "Call HIRAM indirect"
             52 41 4D 20 69 6E 64
             69 72 65 63 74
      000895 00                    1443 	.db 0x00
      000896                       1444 ___str_32:
      000896 54 45 53 54 20 50 41  1445 	.ascii "TEST PASSED"
             53 53 45 44
      0008A1 00                    1446 	.db 0x00
                                   1447 	.area _CODE_1
                                   1448 	.area _INITIALIZER
      000000                       1449 __xinit____EMU_PROFILER_INIT:
      000000r00r00                 1450 	.dw _EMU_profiler_message
      000002                       1451 __xinit__firstRunByte:
      000002 00 A0                 1452 	.dw #0xa000
      000004                       1453 __xinit__results:
      000004 01 A0                 1454 	.dw #0xa001
      000006                       1455 __xinit__endData:
      000006 1E A0                 1456 	.dw #0xa01e
      000008                       1457 __xinit__memTestCounter:
      000008 00 00                 1458 	.dw #0x0000
      00000A                       1459 __xinit__inc_ram_var:
      00000Ar00r00                 1460 	.dw _ram_buffer
      00000C                       1461 __xinit__inc_hiram_var:
      00000Cr00r00                 1462 	.dw _hiram_buffer
                                   1463 	.area _CABS (ABS)
