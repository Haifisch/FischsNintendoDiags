                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module utilities
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _set_default_palette
                                     12 	.globl _set_bkg_palette
                                     13 	.globl _EMU_printf
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _waitpadup
                                     17 	.globl _joypad
                                     18 	.globl b_blank_display
                                     19 	.globl _blank_display
                                     20 	.globl b_ask_user_pass_or_fail
                                     21 	.globl _ask_user_pass_or_fail
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DATA
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _INITIALIZED
      000000                         33 ___EMU_PROFILER_INIT:
      000000                         34 	.ds 2
                                     35 ;--------------------------------------------------------
                                     36 ; absolute external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _DABS (ABS)
                                     39 ;--------------------------------------------------------
                                     40 ; global & static initialisations
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _GSINIT
                                     44 	.area _GSFINAL
                                     45 	.area _GSINIT
                                     46 ;--------------------------------------------------------
                                     47 ; Home
                                     48 ;--------------------------------------------------------
                                     49 	.area _HOME
                                     50 	.area _HOME
                                     51 ;--------------------------------------------------------
                                     52 ; code
                                     53 ;--------------------------------------------------------
                                     54 	.area _CODE_2
                                     55 ;src/utilities.c:10: void blank_display() BANKED
                                     56 ;	---------------------------------
                                     57 ; Function blank_display
                                     58 ; ---------------------------------
                           000002    59 	b_blank_display	= 2
      000000                         60 _blank_display::
      000000 21 84 FE                61 	ld	hl, #-380
      000003 39                      62 	add	hl, sp
      000004 F9                      63 	ld	sp, hl
                                     64 ;src/utilities.c:12: PRINT_FUNC_INFO;
      000005 F0r00                   65 	ldh	a, (__current_bank + 0)
      000007 4F                      66 	ld	c, a
      000008 06 00                   67 	ld	b, #0x00
      00000A C5                      68 	push	bc
      00000B 11rF0r00                69 	ld	de, #___str_2
      00000E D5                      70 	push	de
      00000F 11 0C 00                71 	ld	de, #0x000c
      000012 D5                      72 	push	de
      000013 11rE0r00                73 	ld	de, #___str_1
      000016 D5                      74 	push	de
      000017 11rC4r00                75 	ld	de, #___str_0
      00001A D5                      76 	push	de
      00001B CDr00r00                77 	call	_EMU_printf
      00001E E8 0A                   78 	add	sp, #10
                                     79 ;src/utilities.c:13: HIDE_SPRITES;
      000020 F0r00                   80 	ldh	a, (_LCDC_REG + 0)
      000022 E6 FD                   81 	and	a, #0xfd
      000024 E0r00                   82 	ldh	(_LCDC_REG + 0), a
                                     83 ;src/utilities.c:14: HIDE_BKG;
      000026 F0r00                   84 	ldh	a, (_LCDC_REG + 0)
      000028 E6 FE                   85 	and	a, #0xfe
      00002A E0r00                   86 	ldh	(_LCDC_REG + 0), a
                                     87 ;src/utilities.c:18: for (i = 0; i < 16; ++i)
      00002C F8 00                   88 	ldhl	sp,	#0
      00002E 7D                      89 	ld	a, l
      00002F 54                      90 	ld	d, h
      000030 21 78 01                91 	ld	hl, #376
      000033 39                      92 	add	hl, sp
      000034 22                      93 	ld	(hl+), a
      000035 72                      94 	ld	(hl), d
      000036 01 00 00                95 	ld	bc, #0x0000
      000039                         96 00103$:
                                     97 ;src/utilities.c:20: blank_display_tiles[i] = 0x0;
      000039 21 78 01                98 	ld	hl, #376
      00003C 39                      99 	add	hl, sp
      00003D 2A                     100 	ld	a,	(hl+)
      00003E 66                     101 	ld	h, (hl)
      00003F 6F                     102 	ld	l, a
      000040 09                     103 	add	hl, bc
      000041 5D                     104 	ld	e, l
      000042 54                     105 	ld	d, h
      000043 AF                     106 	xor	a, a
      000044 12                     107 	ld	(de), a
                                    108 ;src/utilities.c:18: for (i = 0; i < 16; ++i)
      000045 03                     109 	inc	bc
      000046 79                     110 	ld	a, c
      000047 D6 10                  111 	sub	a, #0x10
      000049 78                     112 	ld	a, b
      00004A 17                     113 	rla
      00004B 3F                     114 	ccf
      00004C 1F                     115 	rra
      00004D DE 80                  116 	sbc	a, #0x80
      00004F 38 E8                  117 	jr	C, 00103$
                                    118 ;src/utilities.c:23: for (i = 0; i < 360; ++i)
      000051 F8 10                  119 	ldhl	sp,	#16
      000053 7D                     120 	ld	a, l
      000054 54                     121 	ld	d, h
      000055 21 7A 01               122 	ld	hl, #378
      000058 39                     123 	add	hl, sp
      000059 22                     124 	ld	(hl+), a
      00005A 72                     125 	ld	(hl), d
      00005B 01 00 00               126 	ld	bc, #0x0000
      00005E                        127 00105$:
                                    128 ;src/utilities.c:25: blank_display_map_and_attr[i] = 0x0;
      00005E 21 7A 01               129 	ld	hl, #378
      000061 39                     130 	add	hl, sp
      000062 2A                     131 	ld	a,	(hl+)
      000063 66                     132 	ld	h, (hl)
      000064 6F                     133 	ld	l, a
      000065 09                     134 	add	hl, bc
      000066 5D                     135 	ld	e, l
      000067 54                     136 	ld	d, h
      000068 AF                     137 	xor	a, a
      000069 12                     138 	ld	(de), a
                                    139 ;src/utilities.c:23: for (i = 0; i < 360; ++i)
      00006A 03                     140 	inc	bc
      00006B 79                     141 	ld	a, c
      00006C D6 68                  142 	sub	a, #0x68
      00006E 78                     143 	ld	a, b
      00006F 17                     144 	rla
      000070 3F                     145 	ccf
      000071 1F                     146 	rra
      000072 DE 81                  147 	sbc	a, #0x81
      000074 38 E8                  148 	jr	C, 00105$
                                    149 ;src/utilities.c:27: set_default_palette();
      000076 CDr00r00               150 	call	_set_default_palette
                                    151 ;src/utilities.c:28: set_bkg_data(0, 1, blank_display_tiles);
      000079 21 78 01               152 	ld	hl, #376
      00007C 39                     153 	add	hl, sp
      00007D 2A                     154 	ld	a, (hl+)
      00007E 4F                     155 	ld	c, a
      00007F 46                     156 	ld	b, (hl)
      000080 C5                     157 	push	bc
      000081 AF                     158 	xor	a, a
      000082 3C                     159 	inc	a
      000083 F5                     160 	push	af
      000084 CDr00r00               161 	call	_set_bkg_data
      000087 E8 04                  162 	add	sp, #4
                                    163 ;src/utilities.c:29: VBK_REG = 1;
      000089 3E 01                  164 	ld	a, #0x01
      00008B E0r00                  165 	ldh	(_VBK_REG + 0), a
                                    166 ;src/utilities.c:30: set_bkg_tiles(0, 0, 20, 18, blank_display_map_and_attr);
      00008D 21 7A 01               167 	ld	hl, #378
      000090 39                     168 	add	hl, sp
      000091 2A                     169 	ld	a, (hl+)
      000092 4F                     170 	ld	c, a
      000093 46                     171 	ld	b, (hl)
      000094 C5                     172 	push	bc
      000095 21 14 12               173 	ld	hl, #0x1214
      000098 E5                     174 	push	hl
      000099 AF                     175 	xor	a, a
      00009A 0F                     176 	rrca
      00009B F5                     177 	push	af
      00009C CDr00r00               178 	call	_set_bkg_tiles
      00009F E8 06                  179 	add	sp, #6
                                    180 ;src/utilities.c:31: VBK_REG = 0;
      0000A1 AF                     181 	xor	a, a
      0000A2 E0r00                  182 	ldh	(_VBK_REG + 0), a
                                    183 ;src/utilities.c:32: set_bkg_tiles(0, 0, 20, 18, blank_display_map_and_attr);
      0000A4 21 7A 01               184 	ld	hl, #378
      0000A7 39                     185 	add	hl, sp
      0000A8 2A                     186 	ld	a, (hl+)
      0000A9 4F                     187 	ld	c, a
      0000AA 46                     188 	ld	b, (hl)
      0000AB C5                     189 	push	bc
      0000AC 21 14 12               190 	ld	hl, #0x1214
      0000AF E5                     191 	push	hl
      0000B0 AF                     192 	xor	a, a
      0000B1 0F                     193 	rrca
      0000B2 F5                     194 	push	af
      0000B3 CDr00r00               195 	call	_set_bkg_tiles
      0000B6 E8 06                  196 	add	sp, #6
                                    197 ;src/utilities.c:33: SHOW_BKG;
      0000B8 F0r00                  198 	ldh	a, (_LCDC_REG + 0)
      0000BA F6 01                  199 	or	a, #0x01
      0000BC E0r00                  200 	ldh	(_LCDC_REG + 0), a
                                    201 ;src/utilities.c:34: }
      0000BE 21 7C 01               202 	ld	hl, #380
      0000C1 39                     203 	add	hl, sp
      0000C2 F9                     204 	ld	sp, hl
      0000C3 C9                     205 	ret
      0000C4                        206 ___str_0:
      0000C4 5B 44 42 47 5D 20 25   207 	.ascii "[DBG] %s:%d @ %s() bank: %d"
             73 3A 25 64 20 40 20
             25 73 28 29 20 62 61
             6E 6B 3A 20 25 64
      0000DF 00                     208 	.db 0x00
      0000E0                        209 ___str_1:
      0000E0 73 72 63 2F 75 74 69   210 	.ascii "src/utilities.c"
             6C 69 74 69 65 73 2E
             63
      0000EF 00                     211 	.db 0x00
      0000F0                        212 ___str_2:
      0000F0 62 6C 61 6E 6B 5F 64   213 	.ascii "blank_display"
             69 73 70 6C 61 79
      0000FD 00                     214 	.db 0x00
                                    215 ;src/utilities.c:36: int ask_user_pass_or_fail() BANKED
                                    216 ;	---------------------------------
                                    217 ; Function ask_user_pass_or_fail
                                    218 ; ---------------------------------
                           000002   219 	b_ask_user_pass_or_fail	= 2
      0000FE                        220 _ask_user_pass_or_fail::
                                    221 ;src/utilities.c:38: PRINT_FUNC_INFO;
      0000FE F0r00                  222 	ldh	a, (__current_bank + 0)
      000100 4F                     223 	ld	c, a
      000101 06 00                  224 	ld	b, #0x00
      000103 C5                     225 	push	bc
      000104 11r0Cr02               226 	ld	de, #___str_5
      000107 D5                     227 	push	de
      000108 11 26 00               228 	ld	de, #0x0026
      00010B D5                     229 	push	de
      00010C 11rFCr01               230 	ld	de, #___str_4
      00010F D5                     231 	push	de
      000110 11rE0r01               232 	ld	de, #___str_3
      000113 D5                     233 	push	de
      000114 CDr00r00               234 	call	_EMU_printf
      000117 E8 0A                  235 	add	sp, #10
                                    236 ;src/utilities.c:39: HIDE_SPRITES;
      000119 F0r00                  237 	ldh	a, (_LCDC_REG + 0)
      00011B E6 FD                  238 	and	a, #0xfd
      00011D E0r00                  239 	ldh	(_LCDC_REG + 0), a
                                    240 ;src/utilities.c:40: HIDE_BKG;
      00011F F0r00                  241 	ldh	a, (_LCDC_REG + 0)
      000121 E6 FE                  242 	and	a, #0xfe
      000123 E0r00                  243 	ldh	(_LCDC_REG + 0), a
                                    244 ;src/utilities.c:41: set_bkg_palette(0, 1, passfail_bg_palettes);
      000125 11r00r00               245 	ld	de, #_passfail_bg_palettes
      000128 D5                     246 	push	de
      000129 AF                     247 	xor	a, a
      00012A 3C                     248 	inc	a
      00012B F5                     249 	push	af
      00012C CDr00r00               250 	call	_set_bkg_palette
      00012F E8 04                  251 	add	sp, #4
                                    252 ;src/utilities.c:42: set_bkg_palette(1, 1, passfail_bg_palettes);
      000131 11r00r00               253 	ld	de, #_passfail_bg_palettes
      000134 D5                     254 	push	de
      000135 21 01 01               255 	ld	hl, #0x101
      000138 E5                     256 	push	hl
      000139 CDr00r00               257 	call	_set_bkg_palette
      00013C E8 04                  258 	add	sp, #4
                                    259 ;src/utilities.c:43: set_bkg_palette(2, 1, passfail_bg_palettes);
      00013E 11r00r00               260 	ld	de, #_passfail_bg_palettes
      000141 D5                     261 	push	de
      000142 21 02 01               262 	ld	hl, #0x102
      000145 E5                     263 	push	hl
      000146 CDr00r00               264 	call	_set_bkg_palette
      000149 E8 04                  265 	add	sp, #4
                                    266 ;src/utilities.c:44: set_bkg_palette(3, 1, passfail_bg_palettes);
      00014B 11r00r00               267 	ld	de, #_passfail_bg_palettes
      00014E D5                     268 	push	de
      00014F 21 03 01               269 	ld	hl, #0x103
      000152 E5                     270 	push	hl
      000153 CDr00r00               271 	call	_set_bkg_palette
      000156 E8 04                  272 	add	sp, #4
                                    273 ;src/utilities.c:45: set_bkg_palette(4, 1, passfail_bg_palettes);
      000158 11r00r00               274 	ld	de, #_passfail_bg_palettes
      00015B D5                     275 	push	de
      00015C 21 04 01               276 	ld	hl, #0x104
      00015F E5                     277 	push	hl
      000160 CDr00r00               278 	call	_set_bkg_palette
      000163 E8 04                  279 	add	sp, #4
                                    280 ;src/utilities.c:46: set_bkg_palette(5, 1, passfail_bg_palettes);
      000165 11r00r00               281 	ld	de, #_passfail_bg_palettes
      000168 D5                     282 	push	de
      000169 21 05 01               283 	ld	hl, #0x105
      00016C E5                     284 	push	hl
      00016D CDr00r00               285 	call	_set_bkg_palette
      000170 E8 04                  286 	add	sp, #4
                                    287 ;src/utilities.c:47: set_bkg_palette(6, 1, passfail_bg_palettes);
      000172 11r00r00               288 	ld	de, #_passfail_bg_palettes
      000175 D5                     289 	push	de
      000176 21 06 01               290 	ld	hl, #0x106
      000179 E5                     291 	push	hl
      00017A CDr00r00               292 	call	_set_bkg_palette
      00017D E8 04                  293 	add	sp, #4
                                    294 ;src/utilities.c:48: set_bkg_palette(7, 1, passfail_bg_palettes);
      00017F 11r00r00               295 	ld	de, #_passfail_bg_palettes
      000182 D5                     296 	push	de
      000183 21 07 01               297 	ld	hl, #0x107
      000186 E5                     298 	push	hl
      000187 CDr00r00               299 	call	_set_bkg_palette
      00018A E8 04                  300 	add	sp, #4
                                    301 ;src/utilities.c:49: set_bkg_data(0, passfail_bg_TILE_COUNT, passfail_bg_tiles);
      00018C 11r00r00               302 	ld	de, #_passfail_bg_tiles
      00018F D5                     303 	push	de
      000190 21 00 96               304 	ld	hl, #0x9600
      000193 E5                     305 	push	hl
      000194 CDr00r00               306 	call	_set_bkg_data
      000197 E8 04                  307 	add	sp, #4
                                    308 ;src/utilities.c:50: VBK_REG = 1;
      000199 3E 01                  309 	ld	a, #0x01
      00019B E0r00                  310 	ldh	(_VBK_REG + 0), a
                                    311 ;src/utilities.c:51: set_bkg_tiles(0, 0, 20, 18, passfail_bg_map_attributes);
      00019D 11r00r00               312 	ld	de, #_passfail_bg_map_attributes
      0001A0 D5                     313 	push	de
      0001A1 21 14 12               314 	ld	hl, #0x1214
      0001A4 E5                     315 	push	hl
      0001A5 AF                     316 	xor	a, a
      0001A6 0F                     317 	rrca
      0001A7 F5                     318 	push	af
      0001A8 CDr00r00               319 	call	_set_bkg_tiles
      0001AB E8 06                  320 	add	sp, #6
                                    321 ;src/utilities.c:52: VBK_REG = 0;
      0001AD AF                     322 	xor	a, a
      0001AE E0r00                  323 	ldh	(_VBK_REG + 0), a
                                    324 ;src/utilities.c:53: set_bkg_tiles(0, 0, 20, 18, passfail_bg_map);
      0001B0 11r00r00               325 	ld	de, #_passfail_bg_map
      0001B3 D5                     326 	push	de
      0001B4 21 14 12               327 	ld	hl, #0x1214
      0001B7 E5                     328 	push	hl
      0001B8 AF                     329 	xor	a, a
      0001B9 0F                     330 	rrca
      0001BA F5                     331 	push	af
      0001BB CDr00r00               332 	call	_set_bkg_tiles
      0001BE E8 06                  333 	add	sp, #6
                                    334 ;src/utilities.c:54: SHOW_BKG;
      0001C0 F0r00                  335 	ldh	a, (_LCDC_REG + 0)
      0001C2 F6 01                  336 	or	a, #0x01
      0001C4 E0r00                  337 	ldh	(_LCDC_REG + 0), a
                                    338 ;src/utilities.c:56: while (1) {
      0001C6                        339 00107$:
                                    340 ;src/utilities.c:57: if (joypad() & J_A) {
      0001C6 CDr00r00               341 	call	_joypad
      0001C9 CB 63                  342 	bit	4, e
      0001CB 28 06                  343 	jr	Z, 00104$
                                    344 ;src/utilities.c:58: result = TEST_PASSED;
      0001CD 11 25 00               345 	ld	de, #0x0025
                                    346 ;src/utilities.c:59: waitpadup();
                                    347 ;src/utilities.c:60: break;
      0001D0 C3r00r00               348 	jp  _waitpadup
      0001D3                        349 00104$:
                                    350 ;src/utilities.c:61: } else if (joypad() & J_B) {
      0001D3 CDr00r00               351 	call	_joypad
      0001D6 CB 6B                  352 	bit	5, e
      0001D8 28 EC                  353 	jr	Z, 00107$
                                    354 ;src/utilities.c:62: result = TEST_FAILED;
      0001DA 11 69 00               355 	ld	de, #0x0069
                                    356 ;src/utilities.c:63: waitpadup();
                                    357 ;src/utilities.c:64: break;
                                    358 ;src/utilities.c:68: return result;
                                    359 ;src/utilities.c:69: }
      0001DD C3r00r00               360 	jp  _waitpadup
      0001E0                        361 ___str_3:
      0001E0 5B 44 42 47 5D 20 25   362 	.ascii "[DBG] %s:%d @ %s() bank: %d"
             73 3A 25 64 20 40 20
             25 73 28 29 20 62 61
             6E 6B 3A 20 25 64
      0001FB 00                     363 	.db 0x00
      0001FC                        364 ___str_4:
      0001FC 73 72 63 2F 75 74 69   365 	.ascii "src/utilities.c"
             6C 69 74 69 65 73 2E
             63
      00020B 00                     366 	.db 0x00
      00020C                        367 ___str_5:
      00020C 61 73 6B 5F 75 73 65   368 	.ascii "ask_user_pass_or_fail"
             72 5F 70 61 73 73 5F
             6F 72 5F 66 61 69 6C
      000221 00                     369 	.db 0x00
                                    370 	.area _CODE_2
                                    371 	.area _INITIALIZER
      000000                        372 __xinit____EMU_PROFILER_INIT:
      000000r00r00                  373 	.dw _EMU_profiler_message
                                    374 	.area _CABS (ABS)
