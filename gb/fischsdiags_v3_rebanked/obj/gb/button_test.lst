                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module button_test
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl b_button_test
                                     12 	.globl _button_test
                                     13 	.globl b___func_button_test
                                     14 	.globl ___func_button_test
                                     15 	.globl b_buttons_sequence
                                     16 	.globl _buttons_sequence
                                     17 	.globl b___func_buttons_sequence
                                     18 	.globl ___func_buttons_sequence
                                     19 	.globl b_next_button
                                     20 	.globl _next_button
                                     21 	.globl b___func_next_button
                                     22 	.globl ___func_next_button
                                     23 	.globl b_next_arrow
                                     24 	.globl _next_arrow
                                     25 	.globl b___func_next_arrow
                                     26 	.globl ___func_next_arrow
                                     27 	.globl _set_sprite_palette
                                     28 	.globl _EMU_printf
                                     29 	.globl _set_sprite_data
                                     30 	.globl _wait_vbl_done
                                     31 	.globl _waitpadup
                                     32 	.globl _waitpad
                                     33 	.globl _joypad
                                     34 	.globl _delay
                                     35 	.globl _arrow_center_x
                                     36 	.globl _primaryButtonBits
                                     37 	.globl _button_test_palette
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area _DATA
      000000                         45 _primaryButtonBits::
      000000                         46 	.ds 1
                                     47 ;--------------------------------------------------------
                                     48 ; ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area _INITIALIZED
      000000                         51 ___EMU_PROFILER_INIT:
      000000                         52 	.ds 2
      000002                         53 _arrow_center_x::
      000002                         54 	.ds 1
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _DABS (ABS)
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area _HOME
                                     63 	.area _GSINIT
                                     64 	.area _GSFINAL
                                     65 	.area _GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area _HOME
                                     70 	.area _HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area _CODE_2
                                     75 ;src/test_impl/button_test.c:29: BANKREF(next_arrow)
                                     76 ;	---------------------------------
                                     77 ; Function __func_next_arrow
                                     78 ; ---------------------------------
                           000002    79 	b___func_next_arrow	= 2
      000000                         80 ___func_next_arrow::
                                     81 	.local b___func_next_arrow 
                           000002    82 	___bank_next_arrow = b___func_next_arrow 
                                     83 	.globl ___bank_next_arrow 
                                     84 ;src/test_impl/button_test.c:30: void next_arrow(uint8_t startIndex) BANKED
                                     85 ;	---------------------------------
                                     86 ; Function next_arrow
                                     87 ; ---------------------------------
                           000002    88 	b_next_arrow	= 2
      000000                         89 _next_arrow::
      000000 E8 FB                   90 	add	sp, #-5
                                     91 ;src/test_impl/button_test.c:32: SPRITES_8x8;
      000002 F0r00                   92 	ldh	a, (_LCDC_REG + 0)
      000004 E6 FB                   93 	and	a, #0xfb
      000006 E0r00                   94 	ldh	(_LCDC_REG + 0), a
                                     95 ;src/test_impl/button_test.c:33: set_sprite_palette(0, 1, button_test_palette);
      000008 11r95r00                96 	ld	de, #_button_test_palette
      00000B D5                      97 	push	de
      00000C AF                      98 	xor	a, a
      00000D 3C                      99 	inc	a
      00000E F5                     100 	push	af
      00000F CDr00r00               101 	call	_set_sprite_palette
      000012 E8 04                  102 	add	sp, #4
                                    103 ;src/test_impl/button_test.c:34: set_sprite_data(0, BUTTON_ARROW_TILE_COUNT, BUTTON_ARROW);
      000014 11r00r00               104 	ld	de, #_BUTTON_ARROW
      000017 D5                     105 	push	de
      000018 21 00 40               106 	ld	hl, #0x4000
      00001B E5                     107 	push	hl
      00001C CDr00r00               108 	call	_set_sprite_data
      00001F E8 04                  109 	add	sp, #4
                                    110 ;src/test_impl/button_test.c:35: uint8_t arrow_tile_idx = startIndex;
      000021 F8 0B                  111 	ldhl	sp,	#11
      000023 4E                     112 	ld	c, (hl)
                                    113 ;src/test_impl/button_test.c:36: uint8_t arrow_x = arrow_center_x;
      000024 FAr02r00               114 	ld	a, (#_arrow_center_x)
      000027 F8 02                  115 	ldhl	sp,	#2
                                    116 ;src/test_impl/button_test.c:37: uint8_t arrow_y = 64;
      000029 22                     117 	ld	(hl+), a
      00002A 36 40                  118 	ld	(hl), #0x40
                                    119 ;src/test_impl/button_test.c:38: for (uint8_t i = 0; i < 16; ++i)
      00002C 1E 00                  120 	ld	e, #0x00
      00002E                        121 00107$:
      00002E 7B                     122 	ld	a, e
      00002F D6 10                  123 	sub	a, #0x10
      000031 30 1C                  124 	jr	NC, 00101$
                                    125 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000033 F8 00                  126 	ldhl	sp,	#0
      000035 7B                     127 	ld	a, e
      000036 22                     128 	ld	(hl+), a
      000037 AF                     129 	xor	a, a
      000038 32                     130 	ld	(hl-), a
      000039 2A                     131 	ld	a, (hl+)
      00003A 46                     132 	ld	b, (hl)
      00003B 87                     133 	add	a, a
      00003C CB 10                  134 	rl	b
      00003E 87                     135 	add	a, a
      00003F CB 10                  136 	rl	b
      000041 C6r00                  137 	add	a, #<(_shadow_OAM)
      000043 6F                     138 	ld	l, a
                                    139 ;	spillPairReg hl
                                    140 ;	spillPairReg hl
      000044 78                     141 	ld	a, b
      000045 CEs00                  142 	adc	a, #>(_shadow_OAM)
      000047 67                     143 	ld	h, a
                                    144 ;	spillPairReg hl
                                    145 ;	spillPairReg hl
      000048 23                     146 	inc	hl
      000049 23                     147 	inc	hl
      00004A 71                     148 	ld	(hl), c
                                    149 ;src/test_impl/button_test.c:41: arrow_tile_idx += 1;
      00004B 0C                     150 	inc	c
                                    151 ;src/test_impl/button_test.c:38: for (uint8_t i = 0; i < 16; ++i)
      00004C 1C                     152 	inc	e
      00004D 18 DF                  153 	jr	00107$
      00004F                        154 00101$:
                                    155 ;src/test_impl/button_test.c:43: uint8_t arrow_tile = 0;
                                    156 ;src/test_impl/button_test.c:44: for (uint8_t q = 0; q < 4; ++q)
      00004F 01 00 00               157 	ld	bc, #0x0
      000052                        158 00113$:
      000052 79                     159 	ld	a, c
      000053 D6 04                  160 	sub	a, #0x04
      000055 30 35                  161 	jr	NC, 00103$
                                    162 ;src/test_impl/button_test.c:46: for (uint8_t t = 0; t < 4; ++t)
      000057 F8 04                  163 	ldhl	sp,	#4
      000059 36 00                  164 	ld	(hl), #0x00
      00005B                        165 00110$:
      00005B F8 04                  166 	ldhl	sp,	#4
      00005D 7E                     167 	ld	a, (hl)
      00005E D6 04                  168 	sub	a, #0x04
      000060 30 1B                  169 	jr	NC, 00124$
                                    170 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000062 11r00r00               171 	ld	de, #_shadow_OAM+0
      000065 68                     172 	ld	l, b
                                    173 ;	spillPairReg hl
                                    174 ;	spillPairReg hl
      000066 26 00                  175 	ld	h, #0x00
                                    176 ;	spillPairReg hl
                                    177 ;	spillPairReg hl
      000068 29                     178 	add	hl, hl
      000069 29                     179 	add	hl, hl
      00006A 19                     180 	add	hl, de
      00006B 5D                     181 	ld	e, l
      00006C 54                     182 	ld	d, h
                                    183 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00006D F8 03                  184 	ldhl	sp,	#3
      00006F 3A                     185 	ld	a, (hl-)
      000070 12                     186 	ld	(de), a
      000071 13                     187 	inc	de
      000072 7E                     188 	ld	a, (hl)
      000073 12                     189 	ld	(de), a
                                    190 ;src/test_impl/button_test.c:49: arrow_x += 8;
      000074 7E                     191 	ld	a, (hl)
      000075 C6 08                  192 	add	a, #0x08
                                    193 ;src/test_impl/button_test.c:50: arrow_tile++;
                                    194 ;src/test_impl/button_test.c:46: for (uint8_t t = 0; t < 4; ++t)
      000077 22                     195 	ld	(hl+), a
      000078 23                     196 	inc	hl
      000079 04                     197 	inc	b
      00007A 34                     198 	inc	(hl)
      00007B 18 DE                  199 	jr	00110$
      00007D                        200 00124$:
                                    201 ;src/test_impl/button_test.c:52: arrow_y += 8;
      00007D F8 03                  202 	ldhl	sp,	#3
      00007F 7E                     203 	ld	a, (hl)
      000080 C6 08                  204 	add	a, #0x08
      000082 77                     205 	ld	(hl), a
                                    206 ;src/test_impl/button_test.c:53: arrow_x = arrow_center_x;
      000083 FAr02r00               207 	ld	a, (#_arrow_center_x)
      000086 F8 02                  208 	ldhl	sp,	#2
      000088 77                     209 	ld	(hl), a
                                    210 ;src/test_impl/button_test.c:44: for (uint8_t q = 0; q < 4; ++q)
      000089 0C                     211 	inc	c
      00008A 18 C6                  212 	jr	00113$
      00008C                        213 00103$:
                                    214 ;src/test_impl/button_test.c:55: SHOW_SPRITES;
      00008C F0r00                  215 	ldh	a, (_LCDC_REG + 0)
      00008E F6 02                  216 	or	a, #0x02
      000090 E0r00                  217 	ldh	(_LCDC_REG + 0), a
                                    218 ;src/test_impl/button_test.c:56: }
      000092 E8 05                  219 	add	sp, #5
      000094 C9                     220 	ret
      000095                        221 _button_test_palette:
      000095 1F 00                  222 	.dw #0x001f
      000097 1F 00                  223 	.dw #0x001f
      000099 1F 00                  224 	.dw #0x001f
      00009B 1F 00                  225 	.dw #0x001f
                                    226 ;src/test_impl/button_test.c:58: BANKREF(next_button)
                                    227 ;	---------------------------------
                                    228 ; Function __func_next_button
                                    229 ; ---------------------------------
                           000002   230 	b___func_next_button	= 2
      00009D                        231 ___func_next_button::
                                    232 	.local b___func_next_button 
                           000002   233 	___bank_next_button = b___func_next_button 
                                    234 	.globl ___bank_next_button 
                                    235 ;src/test_impl/button_test.c:59: void next_button(uint8_t startIndex) BANKED
                                    236 ;	---------------------------------
                                    237 ; Function next_button
                                    238 ; ---------------------------------
                           000002   239 	b_next_button	= 2
      00009D                        240 _next_button::
      00009D E8 FB                  241 	add	sp, #-5
                                    242 ;src/test_impl/button_test.c:61: SPRITES_8x8;
      00009F F0r00                  243 	ldh	a, (_LCDC_REG + 0)
      0000A1 E6 FB                  244 	and	a, #0xfb
      0000A3 E0r00                  245 	ldh	(_LCDC_REG + 0), a
                                    246 ;src/test_impl/button_test.c:62: set_sprite_data(64, BUTTONS_TILE_COUNT, BUTTONS);
      0000A5 11r00r00               247 	ld	de, #_BUTTONS
      0000A8 D5                     248 	push	de
      0000A9 21 40 40               249 	ld	hl, #0x4040
      0000AC E5                     250 	push	hl
      0000AD CDr00r00               251 	call	_set_sprite_data
      0000B0 E8 04                  252 	add	sp, #4
                                    253 ;src/test_impl/button_test.c:63: uint8_t arrow_tile_idx = 64 + startIndex;
      0000B2 F8 0B                  254 	ldhl	sp,	#11
      0000B4 7E                     255 	ld	a, (hl)
      0000B5 C6 40                  256 	add	a, #0x40
      0000B7 4F                     257 	ld	c, a
                                    258 ;src/test_impl/button_test.c:64: uint8_t arrow_x = arrow_center_x;
      0000B8 FAr02r00               259 	ld	a, (#_arrow_center_x)
      0000BB F8 02                  260 	ldhl	sp,	#2
                                    261 ;src/test_impl/button_test.c:65: uint8_t arrow_y = 64;
      0000BD 22                     262 	ld	(hl+), a
      0000BE 36 40                  263 	ld	(hl), #0x40
                                    264 ;src/test_impl/button_test.c:66: for (uint8_t i = 16; i < 32; ++i)
      0000C0 1E 10                  265 	ld	e, #0x10
      0000C2                        266 00107$:
      0000C2 7B                     267 	ld	a, e
      0000C3 D6 20                  268 	sub	a, #0x20
      0000C5 30 1C                  269 	jr	NC, 00101$
                                    270 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0000C7 F8 00                  271 	ldhl	sp,	#0
      0000C9 7B                     272 	ld	a, e
      0000CA 22                     273 	ld	(hl+), a
      0000CB AF                     274 	xor	a, a
      0000CC 32                     275 	ld	(hl-), a
      0000CD 2A                     276 	ld	a, (hl+)
      0000CE 46                     277 	ld	b, (hl)
      0000CF 87                     278 	add	a, a
      0000D0 CB 10                  279 	rl	b
      0000D2 87                     280 	add	a, a
      0000D3 CB 10                  281 	rl	b
      0000D5 C6r00                  282 	add	a, #<(_shadow_OAM)
      0000D7 6F                     283 	ld	l, a
                                    284 ;	spillPairReg hl
                                    285 ;	spillPairReg hl
      0000D8 78                     286 	ld	a, b
      0000D9 CEs00                  287 	adc	a, #>(_shadow_OAM)
      0000DB 67                     288 	ld	h, a
                                    289 ;	spillPairReg hl
                                    290 ;	spillPairReg hl
      0000DC 23                     291 	inc	hl
      0000DD 23                     292 	inc	hl
      0000DE 71                     293 	ld	(hl), c
                                    294 ;src/test_impl/button_test.c:69: arrow_tile_idx += 1;
      0000DF 0C                     295 	inc	c
                                    296 ;src/test_impl/button_test.c:66: for (uint8_t i = 16; i < 32; ++i)
      0000E0 1C                     297 	inc	e
      0000E1 18 DF                  298 	jr	00107$
      0000E3                        299 00101$:
                                    300 ;src/test_impl/button_test.c:71: uint8_t arrow_tile = 16;
                                    301 ;src/test_impl/button_test.c:72: for (uint8_t q = 0; q < 4; ++q)
      0000E3 01 00 10               302 	ld	bc, #0x1000
      0000E6                        303 00113$:
      0000E6 79                     304 	ld	a, c
      0000E7 D6 04                  305 	sub	a, #0x04
      0000E9 30 35                  306 	jr	NC, 00103$
                                    307 ;src/test_impl/button_test.c:74: for (uint8_t t = 0; t < 4; ++t)
      0000EB F8 04                  308 	ldhl	sp,	#4
      0000ED 36 00                  309 	ld	(hl), #0x00
      0000EF                        310 00110$:
      0000EF F8 04                  311 	ldhl	sp,	#4
      0000F1 7E                     312 	ld	a, (hl)
      0000F2 D6 04                  313 	sub	a, #0x04
      0000F4 30 1B                  314 	jr	NC, 00124$
                                    315 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0000F6 11r00r00               316 	ld	de, #_shadow_OAM+0
      0000F9 68                     317 	ld	l, b
                                    318 ;	spillPairReg hl
                                    319 ;	spillPairReg hl
      0000FA 26 00                  320 	ld	h, #0x00
                                    321 ;	spillPairReg hl
                                    322 ;	spillPairReg hl
      0000FC 29                     323 	add	hl, hl
      0000FD 29                     324 	add	hl, hl
      0000FE 19                     325 	add	hl, de
      0000FF 5D                     326 	ld	e, l
      000100 54                     327 	ld	d, h
                                    328 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000101 F8 03                  329 	ldhl	sp,	#3
      000103 3A                     330 	ld	a, (hl-)
      000104 12                     331 	ld	(de), a
      000105 13                     332 	inc	de
      000106 7E                     333 	ld	a, (hl)
      000107 12                     334 	ld	(de), a
                                    335 ;src/test_impl/button_test.c:77: arrow_x += 8;
      000108 7E                     336 	ld	a, (hl)
      000109 C6 08                  337 	add	a, #0x08
                                    338 ;src/test_impl/button_test.c:78: arrow_tile++;
                                    339 ;src/test_impl/button_test.c:74: for (uint8_t t = 0; t < 4; ++t)
      00010B 22                     340 	ld	(hl+), a
      00010C 23                     341 	inc	hl
      00010D 04                     342 	inc	b
      00010E 34                     343 	inc	(hl)
      00010F 18 DE                  344 	jr	00110$
      000111                        345 00124$:
                                    346 ;src/test_impl/button_test.c:80: arrow_y += 8;
      000111 F8 03                  347 	ldhl	sp,	#3
      000113 7E                     348 	ld	a, (hl)
      000114 C6 08                  349 	add	a, #0x08
      000116 77                     350 	ld	(hl), a
                                    351 ;src/test_impl/button_test.c:81: arrow_x = arrow_center_x;
      000117 FAr02r00               352 	ld	a, (#_arrow_center_x)
      00011A F8 02                  353 	ldhl	sp,	#2
      00011C 77                     354 	ld	(hl), a
                                    355 ;src/test_impl/button_test.c:72: for (uint8_t q = 0; q < 4; ++q)
      00011D 0C                     356 	inc	c
      00011E 18 C6                  357 	jr	00113$
      000120                        358 00103$:
                                    359 ;src/test_impl/button_test.c:83: SHOW_SPRITES;
      000120 F0r00                  360 	ldh	a, (_LCDC_REG + 0)
      000122 F6 02                  361 	or	a, #0x02
      000124 E0r00                  362 	ldh	(_LCDC_REG + 0), a
                                    363 ;src/test_impl/button_test.c:84: }
      000126 E8 05                  364 	add	sp, #5
      000128 C9                     365 	ret
                                    366 ;src/test_impl/button_test.c:86: BANKREF(buttons_sequence)
                                    367 ;	---------------------------------
                                    368 ; Function __func_buttons_sequence
                                    369 ; ---------------------------------
                           000002   370 	b___func_buttons_sequence	= 2
      000129                        371 ___func_buttons_sequence::
                                    372 	.local b___func_buttons_sequence 
                           000002   373 	___bank_buttons_sequence = b___func_buttons_sequence 
                                    374 	.globl ___bank_buttons_sequence 
                                    375 ;src/test_impl/button_test.c:87: void buttons_sequence() BANKED
                                    376 ;	---------------------------------
                                    377 ; Function buttons_sequence
                                    378 ; ---------------------------------
                           000002   379 	b_buttons_sequence	= 2
      000129                        380 _buttons_sequence::
                                    381 ;src/test_impl/button_test.c:91: next_button(0);
      000129 AF                     382 	xor	a, a
      00012A F5                     383 	push	af
      00012B 33                     384 	inc	sp
      00012C 1Er00                  385 	ld	e, #b_next_button
      00012E 21r9Dr00               386 	ld	hl, #_next_button
      000131 CDr00r00               387 	call	___sdcc_bcall_ehl
      000134 33                     388 	inc	sp
                                    389 ;src/test_impl/button_test.c:92: waitpad(J_A);
      000135 3E 10                  390 	ld	a, #0x10
      000137 F5                     391 	push	af
      000138 33                     392 	inc	sp
      000139 CDr00r00               393 	call	_waitpad
      00013C 33                     394 	inc	sp
                                    395 ;src/test_impl/button_test.c:93: delay(100);
      00013D 11 64 00               396 	ld	de, #0x0064
      000140 D5                     397 	push	de
      000141 CDr00r00               398 	call	_delay
      000144 E1                     399 	pop	hl
                                    400 ;src/test_impl/button_test.c:95: next_button(16);
      000145 3E 10                  401 	ld	a, #0x10
      000147 F5                     402 	push	af
      000148 33                     403 	inc	sp
      000149 1Er00                  404 	ld	e, #b_next_button
      00014B 21r9Dr00               405 	ld	hl, #_next_button
      00014E CDr00r00               406 	call	___sdcc_bcall_ehl
      000151 33                     407 	inc	sp
                                    408 ;src/test_impl/button_test.c:96: waitpad(J_B);
      000152 3E 20                  409 	ld	a, #0x20
      000154 F5                     410 	push	af
      000155 33                     411 	inc	sp
      000156 CDr00r00               412 	call	_waitpad
      000159 33                     413 	inc	sp
                                    414 ;src/test_impl/button_test.c:97: delay(100);
      00015A 11 64 00               415 	ld	de, #0x0064
      00015D D5                     416 	push	de
      00015E CDr00r00               417 	call	_delay
      000161 E1                     418 	pop	hl
                                    419 ;src/test_impl/button_test.c:99: next_button(32);
      000162 3E 20                  420 	ld	a, #0x20
      000164 F5                     421 	push	af
      000165 33                     422 	inc	sp
      000166 1Er00                  423 	ld	e, #b_next_button
      000168 21r9Dr00               424 	ld	hl, #_next_button
      00016B CDr00r00               425 	call	___sdcc_bcall_ehl
      00016E 33                     426 	inc	sp
                                    427 ;src/test_impl/button_test.c:100: waitpad(J_SELECT);
      00016F 3E 40                  428 	ld	a, #0x40
      000171 F5                     429 	push	af
      000172 33                     430 	inc	sp
      000173 CDr00r00               431 	call	_waitpad
      000176 33                     432 	inc	sp
                                    433 ;src/test_impl/button_test.c:101: delay(100);
      000177 11 64 00               434 	ld	de, #0x0064
      00017A D5                     435 	push	de
      00017B CDr00r00               436 	call	_delay
      00017E E1                     437 	pop	hl
                                    438 ;src/test_impl/button_test.c:103: next_button(48);
      00017F 3E 30                  439 	ld	a, #0x30
      000181 F5                     440 	push	af
      000182 33                     441 	inc	sp
      000183 1Er00                  442 	ld	e, #b_next_button
      000185 21r9Dr00               443 	ld	hl, #_next_button
      000188 CDr00r00               444 	call	___sdcc_bcall_ehl
      00018B 33                     445 	inc	sp
                                    446 ;src/test_impl/button_test.c:104: waitpad(J_START);
      00018C 3E 80                  447 	ld	a, #0x80
      00018E F5                     448 	push	af
      00018F 33                     449 	inc	sp
      000190 CDr00r00               450 	call	_waitpad
      000193 33                     451 	inc	sp
                                    452 ;src/test_impl/button_test.c:105: delay(100);
      000194 11 64 00               453 	ld	de, #0x0064
      000197 D5                     454 	push	de
      000198 CDr00r00               455 	call	_delay
      00019B E1                     456 	pop	hl
                                    457 ;src/test_impl/button_test.c:106: }
      00019C C9                     458 	ret
                                    459 ;src/test_impl/button_test.c:108: BANKREF(button_test)
                                    460 ;	---------------------------------
                                    461 ; Function __func_button_test
                                    462 ; ---------------------------------
                           000002   463 	b___func_button_test	= 2
      00019D                        464 ___func_button_test::
                                    465 	.local b___func_button_test 
                           000002   466 	___bank_button_test = b___func_button_test 
                                    467 	.globl ___bank_button_test 
                                    468 ;src/test_impl/button_test.c:109: void button_test() BANKED 
                                    469 ;	---------------------------------
                                    470 ; Function button_test
                                    471 ; ---------------------------------
                           000002   472 	b_button_test	= 2
      00019D                        473 _button_test::
      00019D 3B                     474 	dec	sp
                                    475 ;src/test_impl/button_test.c:111: PRINT_FUNC_INFO;
      00019E F0r00                  476 	ldh	a, (__current_bank + 0)
      0001A0 4F                     477 	ld	c, a
      0001A1 06 00                  478 	ld	b, #0x00
      0001A3 C5                     479 	push	bc
      0001A4 11rA2r03               480 	ld	de, #___str_2
      0001A7 D5                     481 	push	de
      0001A8 11 6F 00               482 	ld	de, #0x006f
      0001AB D5                     483 	push	de
      0001AC 11r86r03               484 	ld	de, #___str_1
      0001AF D5                     485 	push	de
      0001B0 11r6Ar03               486 	ld	de, #___str_0
      0001B3 D5                     487 	push	de
      0001B4 CDr00r00               488 	call	_EMU_printf
      0001B7 E8 0A                  489 	add	sp, #10
                                    490 ;src/test_impl/button_test.c:114: uint8_t arrow_index = 0;
      0001B9 F8 00                  491 	ldhl	sp,	#0
      0001BB 36 00                  492 	ld	(hl), #0x00
                                    493 ;src/test_impl/button_test.c:115: primaryButtonBits.up = 0;
      0001BD 21r00r00               494 	ld	hl, #_primaryButtonBits
      0001C0 CB A6                  495 	res	4, (hl)
                                    496 ;src/test_impl/button_test.c:116: primaryButtonBits.down = 0;
      0001C2 CB AE                  497 	res	5, (hl)
                                    498 ;src/test_impl/button_test.c:117: primaryButtonBits.left = 0;
      0001C4 CB B6                  499 	res	6, (hl)
                                    500 ;src/test_impl/button_test.c:118: primaryButtonBits.right = 0;
      0001C6 CB BE                  501 	res	7, (hl)
                                    502 ;src/test_impl/button_test.c:119: primaryButtonBits.start = 0;
      0001C8 CB 96                  503 	res	2, (hl)
                                    504 ;src/test_impl/button_test.c:120: primaryButtonBits.select = 0;
      0001CA CB 9E                  505 	res	3, (hl)
                                    506 ;src/test_impl/button_test.c:121: primaryButtonBits.a = 0;
      0001CC CB 86                  507 	res	0, (hl)
                                    508 ;src/test_impl/button_test.c:122: primaryButtonBits.b = 0;
      0001CE CB 8E                  509 	res	1, (hl)
                                    510 ;src/test_impl/button_test.c:123: if (_cpu == DMG_TYPE) {
      0001D0 FAr00r00               511 	ld	a, (#__cpu)
      0001D3 3D                     512 	dec	a
      0001D4 20 07                  513 	jr	NZ, 00102$
                                    514 ;src/test_impl/button_test.c:124: BGP_REG = DMG_PALETTE(DMG_BLACK, DMG_DARK_GRAY, DMG_LITE_GRAY, DMG_WHITE);
      0001D6 3E 1B                  515 	ld	a, #0x1b
      0001D8 E0r00                  516 	ldh	(_BGP_REG + 0), a
                                    517 ;src/test_impl/button_test.c:125: OBP0_REG = DMG_PALETTE(DMG_WHITE, DMG_WHITE, DMG_WHITE, DMG_WHITE);
      0001DA AF                     518 	xor	a, a
      0001DB E0r00                  519 	ldh	(_OBP0_REG + 0), a
      0001DD                        520 00102$:
                                    521 ;src/test_impl/button_test.c:131: next_arrow(arrow_index);
      0001DD AF                     522 	xor	a, a
      0001DE F5                     523 	push	af
      0001DF 33                     524 	inc	sp
      0001E0 1Er00                  525 	ld	e, #b_next_arrow
      0001E2 21r00r00               526 	ld	hl, #_next_arrow
      0001E5 CDr00r00               527 	call	___sdcc_bcall_ehl
      0001E8 33                     528 	inc	sp
                                    529 ;src/test_impl/button_test.c:133: while (1) {
      0001E9                        530 00150$:
                                    531 ;src/test_impl/button_test.c:134: if (primaryButtonBits.up && primaryButtonBits.left && primaryButtonBits.down && primaryButtonBits.right) {
      0001E9 FAr00r00               532 	ld	a, (#_primaryButtonBits + 0)
      0001EC CB 37                  533 	swap	a
      0001EE E6 01                  534 	and	a,#0x01
      0001F0 28 18                  535 	jr	Z, 00104$
      0001F2 FAr00r00               536 	ld	a, (#_primaryButtonBits + 0)
      0001F5 07                     537 	rlca
      0001F6 07                     538 	rlca
      0001F7 30 11                  539 	jr	NC, 00104$
      0001F9 FAr00r00               540 	ld	a, (#_primaryButtonBits + 0)
      0001FC CB 37                  541 	swap	a
      0001FE 0F                     542 	rrca
      0001FF E6 01                  543 	and	a,#0x01
      000201 28 07                  544 	jr	Z, 00104$
      000203 FAr00r00               545 	ld	a, (#_primaryButtonBits + 0)
      000206 07                     546 	rlca
      000207 DAr28r03               547 	jp	C, 00196$
                                    548 ;src/test_impl/button_test.c:135: break;
      00020A                        549 00104$:
                                    550 ;src/test_impl/button_test.c:138: if (primaryButtonBits.up == 0 && (joypad() & J_UP)) {
      00020A FAr00r00               551 	ld	a, (#_primaryButtonBits)
      00020D CB 37                  552 	swap	a
      00020F E6 01                  553 	and	a,#0x01
      000211 20 0C                  554 	jr	NZ, 00109$
      000213 CDr00r00               555 	call	_joypad
      000216 CB 53                  556 	bit	2, e
      000218 28 05                  557 	jr	Z, 00109$
                                    558 ;src/test_impl/button_test.c:139: primaryButtonBits.up = 1;
      00021A 21r00r00               559 	ld	hl, #_primaryButtonBits
      00021D CB E6                  560 	set	4, (hl)
      00021F                        561 00109$:
                                    562 ;src/test_impl/button_test.c:141: if (primaryButtonBits.down == 0 && (joypad() & J_DOWN)) {
      00021F FAr00r00               563 	ld	a, (#_primaryButtonBits + 0)
      000222 CB 37                  564 	swap	a
      000224 0F                     565 	rrca
      000225 E6 01                  566 	and	a,#0x01
      000227 20 0C                  567 	jr	NZ, 00112$
      000229 CDr00r00               568 	call	_joypad
      00022C CB 5B                  569 	bit	3, e
      00022E 28 05                  570 	jr	Z, 00112$
                                    571 ;src/test_impl/button_test.c:142: primaryButtonBits.down = 1;
      000230 21r00r00               572 	ld	hl, #_primaryButtonBits
      000233 CB EE                  573 	set	5, (hl)
      000235                        574 00112$:
                                    575 ;src/test_impl/button_test.c:144: if (primaryButtonBits.left == 0 && (joypad() & J_LEFT)) {
      000235 FAr00r00               576 	ld	a, (#_primaryButtonBits + 0)
      000238 07                     577 	rlca
      000239 07                     578 	rlca
      00023A 38 0C                  579 	jr	C, 00115$
      00023C CDr00r00               580 	call	_joypad
      00023F CB 4B                  581 	bit	1, e
      000241 28 05                  582 	jr	Z, 00115$
                                    583 ;src/test_impl/button_test.c:145: primaryButtonBits.left = 1;
      000243 21r00r00               584 	ld	hl, #_primaryButtonBits
      000246 CB F6                  585 	set	6, (hl)
      000248                        586 00115$:
                                    587 ;src/test_impl/button_test.c:147: if (primaryButtonBits.right == 0 && (joypad() & J_RIGHT)) {
      000248 FAr00r00               588 	ld	a, (#_primaryButtonBits + 0)
      00024B 07                     589 	rlca
      00024C 38 0C                  590 	jr	C, 00118$
      00024E CDr00r00               591 	call	_joypad
      000251 7B                     592 	ld	a, e
      000252 0F                     593 	rrca
      000253 30 05                  594 	jr	NC, 00118$
                                    595 ;src/test_impl/button_test.c:148: primaryButtonBits.right = 1;
      000255 21r00r00               596 	ld	hl, #_primaryButtonBits
      000258 CB FE                  597 	set	7, (hl)
      00025A                        598 00118$:
                                    599 ;src/test_impl/button_test.c:150: if (primaryButtonBits.select == 0 && (joypad() & J_SELECT)) {
      00025A FAr00r00               600 	ld	a, (#_primaryButtonBits + 0)
      00025D CB 37                  601 	swap	a
      00025F 07                     602 	rlca
      000260 38 0C                  603 	jr	C, 00121$
      000262 CDr00r00               604 	call	_joypad
      000265 CB 73                  605 	bit	6, e
      000267 28 05                  606 	jr	Z, 00121$
                                    607 ;src/test_impl/button_test.c:151: primaryButtonBits.select = 1;
      000269 21r00r00               608 	ld	hl, #_primaryButtonBits
      00026C CB DE                  609 	set	3, (hl)
      00026E                        610 00121$:
                                    611 ;src/test_impl/button_test.c:153: if (primaryButtonBits.start == 0 && (joypad() & J_START)) {
      00026E FAr00r00               612 	ld	a, (#_primaryButtonBits + 0)
      000271 0F                     613 	rrca
      000272 0F                     614 	rrca
      000273 E6 01                  615 	and	a,#0x01
      000275 20 0C                  616 	jr	NZ, 00124$
      000277 CDr00r00               617 	call	_joypad
      00027A 7B                     618 	ld	a, e
      00027B 07                     619 	rlca
      00027C 30 05                  620 	jr	NC, 00124$
                                    621 ;src/test_impl/button_test.c:154: primaryButtonBits.start = 1;
      00027E 21r00r00               622 	ld	hl, #_primaryButtonBits
      000281 CB D6                  623 	set	2, (hl)
      000283                        624 00124$:
                                    625 ;src/test_impl/button_test.c:156: if (primaryButtonBits.a == 0 && (joypad() & J_A)) {
      000283 FAr00r00               626 	ld	a, (#_primaryButtonBits + 0)
      000286 E6 01                  627 	and	a,#0x01
      000288 20 0C                  628 	jr	NZ, 00127$
      00028A CDr00r00               629 	call	_joypad
      00028D CB 63                  630 	bit	4, e
      00028F 28 05                  631 	jr	Z, 00127$
                                    632 ;src/test_impl/button_test.c:157: primaryButtonBits.a = 1;
      000291 21r00r00               633 	ld	hl, #_primaryButtonBits
      000294 CB C6                  634 	set	0, (hl)
      000296                        635 00127$:
                                    636 ;src/test_impl/button_test.c:159: if (primaryButtonBits.b == 0 && (joypad() & J_B)) {
      000296 FAr00r00               637 	ld	a, (#_primaryButtonBits + 0)
      000299 0F                     638 	rrca
      00029A E6 01                  639 	and	a,#0x01
      00029C 20 0C                  640 	jr	NZ, 00130$
      00029E CDr00r00               641 	call	_joypad
      0002A1 CB 6B                  642 	bit	5, e
      0002A3 28 05                  643 	jr	Z, 00130$
                                    644 ;src/test_impl/button_test.c:160: primaryButtonBits.b = 1;
      0002A5 21r00r00               645 	ld	hl, #_primaryButtonBits
      0002A8 CB CE                  646 	set	1, (hl)
      0002AA                        647 00130$:
                                    648 ;src/test_impl/button_test.c:162: waitpadup();
      0002AA CDr00r00               649 	call	_waitpadup
                                    650 ;src/test_impl/button_test.c:163: if (primaryButtonBits.up == 0) {
      0002AD FAr00r00               651 	ld	a, (#_primaryButtonBits + 0)
      0002B0 CB 37                  652 	swap	a
      0002B2 E6 01                  653 	and	a,#0x01
      0002B4 20 06                  654 	jr	NZ, 00147$
                                    655 ;src/test_impl/button_test.c:164: arrow_index = 0;
      0002B6 F8 00                  656 	ldhl	sp,	#0
      0002B8 36 00                  657 	ld	(hl), #0x00
      0002BA 18 58                  658 	jr	00148$
      0002BC                        659 00147$:
                                    660 ;src/test_impl/button_test.c:165: } else if (primaryButtonBits.up && primaryButtonBits.right == 0) {
      0002BC FAr00r00               661 	ld	a, (#_primaryButtonBits + 0)
      0002BF CB 37                  662 	swap	a
      0002C1 E6 01                  663 	and	a,#0x01
      0002C3 28 0C                  664 	jr	Z, 00143$
      0002C5 FAr00r00               665 	ld	a, (#_primaryButtonBits + 0)
      0002C8 07                     666 	rlca
      0002C9 38 06                  667 	jr	C, 00143$
                                    668 ;src/test_impl/button_test.c:166: arrow_index = 16;
      0002CB F8 00                  669 	ldhl	sp,	#0
      0002CD 36 10                  670 	ld	(hl), #0x10
      0002CF 18 43                  671 	jr	00148$
      0002D1                        672 00143$:
                                    673 ;src/test_impl/button_test.c:167: } else if (primaryButtonBits.up && primaryButtonBits.right && primaryButtonBits.down == 0) {
      0002D1 FAr00r00               674 	ld	a, (#_primaryButtonBits + 0)
      0002D4 CB 37                  675 	swap	a
      0002D6 E6 01                  676 	and	a,#0x01
      0002D8 28 16                  677 	jr	Z, 00138$
      0002DA FAr00r00               678 	ld	a, (#_primaryButtonBits + 0)
      0002DD 07                     679 	rlca
      0002DE 30 10                  680 	jr	NC, 00138$
      0002E0 FAr00r00               681 	ld	a, (#_primaryButtonBits + 0)
      0002E3 CB 37                  682 	swap	a
      0002E5 0F                     683 	rrca
      0002E6 E6 01                  684 	and	a,#0x01
      0002E8 20 06                  685 	jr	NZ, 00138$
                                    686 ;src/test_impl/button_test.c:168: arrow_index = 32;
      0002EA F8 00                  687 	ldhl	sp,	#0
      0002EC 36 20                  688 	ld	(hl), #0x20
      0002EE 18 24                  689 	jr	00148$
      0002F0                        690 00138$:
                                    691 ;src/test_impl/button_test.c:169: } else if (primaryButtonBits.up && primaryButtonBits.right && primaryButtonBits.down && primaryButtonBits.left == 0) {
      0002F0 FAr00r00               692 	ld	a, (#_primaryButtonBits + 0)
      0002F3 CB 37                  693 	swap	a
      0002F5 E6 01                  694 	and	a,#0x01
      0002F7 28 1B                  695 	jr	Z, 00148$
      0002F9 FAr00r00               696 	ld	a, (#_primaryButtonBits + 0)
      0002FC 07                     697 	rlca
      0002FD 30 15                  698 	jr	NC, 00148$
      0002FF FAr00r00               699 	ld	a, (#_primaryButtonBits + 0)
      000302 CB 37                  700 	swap	a
      000304 0F                     701 	rrca
      000305 E6 01                  702 	and	a,#0x01
      000307 28 0B                  703 	jr	Z, 00148$
      000309 FAr00r00               704 	ld	a, (#_primaryButtonBits + 0)
      00030C 07                     705 	rlca
      00030D 07                     706 	rlca
      00030E 38 04                  707 	jr	C, 00148$
                                    708 ;src/test_impl/button_test.c:170: arrow_index = 48;
      000310 F8 00                  709 	ldhl	sp,	#0
      000312 36 30                  710 	ld	(hl), #0x30
      000314                        711 00148$:
                                    712 ;src/test_impl/button_test.c:172: next_arrow(arrow_index);
      000314 F8 00                  713 	ldhl	sp,	#0
      000316 7E                     714 	ld	a, (hl)
      000317 F5                     715 	push	af
      000318 33                     716 	inc	sp
      000319 1Er00                  717 	ld	e, #b_next_arrow
      00031B 21r00r00               718 	ld	hl, #_next_arrow
      00031E CDr00r00               719 	call	___sdcc_bcall_ehl
      000321 33                     720 	inc	sp
                                    721 ;src/test_impl/button_test.c:173: wait_vbl_done();
      000322 CDr00r00               722 	call	_wait_vbl_done
      000325 C3rE9r01               723 	jp	00150$
                                    724 ;src/test_impl/button_test.c:176: for (uint8_t q = 0; q < 32; ++q)
      000328                        725 00196$:
      000328 F8 00                  726 	ldhl	sp,	#0
      00032A 36 00                  727 	ld	(hl), #0x00
      00032C                        728 00157$:
      00032C F8 00                  729 	ldhl	sp,	#0
      00032E 7E                     730 	ld	a, (hl)
      00032F D6 20                  731 	sub	a, #0x20
      000331 30 11                  732 	jr	NC, 00152$
                                    733 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000333 01r00r00               734 	ld	bc, #_shadow_OAM+0
      000336 6E                     735 	ld	l, (hl)
      000337 26 00                  736 	ld	h, #0x00
      000339 29                     737 	add	hl, hl
      00033A 29                     738 	add	hl, hl
      00033B 09                     739 	add	hl, bc
                                    740 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00033C AF                     741 	xor	a, a
      00033D 22                     742 	ld	(hl+), a
      00033E 77                     743 	ld	(hl), a
                                    744 ;src/test_impl/button_test.c:176: for (uint8_t q = 0; q < 32; ++q)
      00033F F8 00                  745 	ldhl	sp,	#0
      000341 34                     746 	inc	(hl)
      000342 18 E8                  747 	jr	00157$
      000344                        748 00152$:
                                    749 ;src/test_impl/button_test.c:180: buttons_sequence();
      000344 1Er00                  750 	ld	e, #b_buttons_sequence
      000346 21r29r01               751 	ld	hl, #_buttons_sequence
      000349 CDr00r00               752 	call	___sdcc_bcall_ehl
                                    753 ;src/test_impl/button_test.c:182: for (uint8_t q = 0; q < 32; ++q)
      00034C 0E 00                  754 	ld	c, #0x00
      00034E                        755 00160$:
      00034E 79                     756 	ld	a, c
      00034F D6 20                  757 	sub	a, #0x20
      000351 30 0F                  758 	jr	NC, 00153$
                                    759 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000353 11r00r00               760 	ld	de, #_shadow_OAM+0
      000356 69                     761 	ld	l, c
                                    762 ;	spillPairReg hl
                                    763 ;	spillPairReg hl
      000357 26 00                  764 	ld	h, #0x00
                                    765 ;	spillPairReg hl
                                    766 ;	spillPairReg hl
      000359 29                     767 	add	hl, hl
      00035A 29                     768 	add	hl, hl
      00035B 19                     769 	add	hl, de
                                    770 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00035C AF                     771 	xor	a, a
      00035D 22                     772 	ld	(hl+), a
      00035E 77                     773 	ld	(hl), a
                                    774 ;src/test_impl/button_test.c:182: for (uint8_t q = 0; q < 32; ++q)
      00035F 0C                     775 	inc	c
      000360 18 EC                  776 	jr	00160$
      000362                        777 00153$:
                                    778 ;src/test_impl/button_test.c:186: HIDE_SPRITES;
      000362 F0r00                  779 	ldh	a, (_LCDC_REG + 0)
      000364 E6 FD                  780 	and	a, #0xfd
      000366 E0r00                  781 	ldh	(_LCDC_REG + 0), a
                                    782 ;src/test_impl/button_test.c:188: }
      000368 33                     783 	inc	sp
      000369 C9                     784 	ret
      00036A                        785 ___str_0:
      00036A 5B 44 42 47 5D 20 25   786 	.ascii "[DBG] %s:%d @ %s() bank: %d"
             73 3A 25 64 20 40 20
             25 73 28 29 20 62 61
             6E 6B 3A 20 25 64
      000385 00                     787 	.db 0x00
      000386                        788 ___str_1:
      000386 73 72 63 2F 74 65 73   789 	.ascii "src/test_impl/button_test.c"
             74 5F 69 6D 70 6C 2F
             62 75 74 74 6F 6E 5F
             74 65 73 74 2E 63
      0003A1 00                     790 	.db 0x00
      0003A2                        791 ___str_2:
      0003A2 62 75 74 74 6F 6E 5F   792 	.ascii "button_test"
             74 65 73 74
      0003AD 00                     793 	.db 0x00
                                    794 	.area _CODE_2
                                    795 	.area _INITIALIZER
      000000                        796 __xinit____EMU_PROFILER_INIT:
      000000r00r00                  797 	.dw _EMU_profiler_message
      000002                        798 __xinit__arrow_center_x:
      000002 48                     799 	.db #0x48	; 72	'H'
                                    800 	.area _CABS (ABS)
