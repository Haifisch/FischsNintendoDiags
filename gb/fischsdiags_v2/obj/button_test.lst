                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module button_test
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _button_test
                                     12 	.globl _buttons_sequence
                                     13 	.globl _button_test_blank
                                     14 	.globl _cleanup_arrow_sprites
                                     15 	.globl _next_button
                                     16 	.globl _next_arrow
                                     17 	.globl _blank_display
                                     18 	.globl _text_print_string_bkg
                                     19 	.globl _text_load_font
                                     20 	.globl _EMU_printf
                                     21 	.globl _set_sprite_data
                                     22 	.globl _wait_vbl_done
                                     23 	.globl _waitpadup
                                     24 	.globl _waitpad
                                     25 	.globl _joypad
                                     26 	.globl _delay
                                     27 	.globl _arrow_center_x
                                     28 	.globl _primaryButtonBits
                                     29 ;--------------------------------------------------------
                                     30 ; special function registers
                                     31 ;--------------------------------------------------------
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DATA
      000000                         36 _primaryButtonBits::
      000000                         37 	.ds 1
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _INITIALIZED
      000000                         42 ___EMU_PROFILER_INIT:
      000000                         43 	.ds 2
      000002                         44 _arrow_center_x::
      000002                         45 	.ds 1
                                     46 ;--------------------------------------------------------
                                     47 ; absolute external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area _DABS (ABS)
                                     50 ;--------------------------------------------------------
                                     51 ; global & static initialisations
                                     52 ;--------------------------------------------------------
                                     53 	.area _HOME
                                     54 	.area _GSINIT
                                     55 	.area _GSFINAL
                                     56 	.area _GSINIT
                                     57 ;--------------------------------------------------------
                                     58 ; Home
                                     59 ;--------------------------------------------------------
                                     60 	.area _HOME
                                     61 	.area _HOME
                                     62 ;--------------------------------------------------------
                                     63 ; code
                                     64 ;--------------------------------------------------------
                                     65 	.area _CODE
                                     66 ;src/test_impl/button_test.c:23: void next_arrow(uint8_t startIndex) { // UP = 0, RIGHT = 16, DOWN = 32, LEFT = 48
                                     67 ;	---------------------------------
                                     68 ; Function next_arrow
                                     69 ; ---------------------------------
      000000                         70 _next_arrow::
      000000 E8 FB                   71 	add	sp, #-5
                                     72 ;src/test_impl/button_test.c:24: SPRITES_8x8;
      000002 F0r00                   73 	ldh	a, (_LCDC_REG + 0)
      000004 E6 FB                   74 	and	a, #0xfb
      000006 E0r00                   75 	ldh	(_LCDC_REG + 0), a
                                     76 ;src/test_impl/button_test.c:25: set_sprite_data(0, BUTTON_ARROW_TILE_COUNT, BUTTON_ARROW);
      000008 11r00r00                77 	ld	de, #_BUTTON_ARROW
      00000B D5                      78 	push	de
      00000C 21 00 40                79 	ld	hl, #0x4000
      00000F E5                      80 	push	hl
      000010 CDr00r00                81 	call	_set_sprite_data
      000013 E8 04                   82 	add	sp, #4
                                     83 ;src/test_impl/button_test.c:26: uint8_t arrow_tile_idx = startIndex;
      000015 F8 07                   84 	ldhl	sp,	#7
      000017 4E                      85 	ld	c, (hl)
                                     86 ;src/test_impl/button_test.c:27: uint8_t arrow_x = arrow_center_x;
      000018 FAr02r00                87 	ld	a, (#_arrow_center_x)
      00001B F8 02                   88 	ldhl	sp,	#2
                                     89 ;src/test_impl/button_test.c:28: uint8_t arrow_y = 64;
      00001D 22                      90 	ld	(hl+), a
      00001E 36 40                   91 	ld	(hl), #0x40
                                     92 ;src/test_impl/button_test.c:29: for (uint8_t i = 0; i < 16; ++i)
      000020 1E 00                   93 	ld	e, #0x00
      000022                         94 00107$:
      000022 7B                      95 	ld	a, e
      000023 D6 10                   96 	sub	a, #0x10
      000025 30 1C                   97 	jr	NC, 00101$
                                     98 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000027 F8 00                   99 	ldhl	sp,	#0
      000029 7B                     100 	ld	a, e
      00002A 22                     101 	ld	(hl+), a
      00002B AF                     102 	xor	a, a
      00002C 32                     103 	ld	(hl-), a
      00002D 2A                     104 	ld	a, (hl+)
      00002E 46                     105 	ld	b, (hl)
      00002F 87                     106 	add	a, a
      000030 CB 10                  107 	rl	b
      000032 87                     108 	add	a, a
      000033 CB 10                  109 	rl	b
      000035 C6r00                  110 	add	a, #<(_shadow_OAM)
      000037 6F                     111 	ld	l, a
                                    112 ;	spillPairReg hl
                                    113 ;	spillPairReg hl
      000038 78                     114 	ld	a, b
      000039 CEs00                  115 	adc	a, #>(_shadow_OAM)
      00003B 67                     116 	ld	h, a
                                    117 ;	spillPairReg hl
                                    118 ;	spillPairReg hl
      00003C 23                     119 	inc	hl
      00003D 23                     120 	inc	hl
      00003E 71                     121 	ld	(hl), c
                                    122 ;src/test_impl/button_test.c:32: arrow_tile_idx += 1;
      00003F 0C                     123 	inc	c
                                    124 ;src/test_impl/button_test.c:29: for (uint8_t i = 0; i < 16; ++i)
      000040 1C                     125 	inc	e
      000041 18 DF                  126 	jr	00107$
      000043                        127 00101$:
                                    128 ;src/test_impl/button_test.c:34: uint8_t arrow_tile = 0;
                                    129 ;src/test_impl/button_test.c:35: for (uint8_t q = 0; q < 4; ++q)
      000043 01 00 00               130 	ld	bc, #0x0
      000046                        131 00113$:
      000046 79                     132 	ld	a, c
      000047 D6 04                  133 	sub	a, #0x04
      000049 30 35                  134 	jr	NC, 00103$
                                    135 ;src/test_impl/button_test.c:37: for (uint8_t t = 0; t < 4; ++t)
      00004B F8 04                  136 	ldhl	sp,	#4
      00004D 36 00                  137 	ld	(hl), #0x00
      00004F                        138 00110$:
      00004F F8 04                  139 	ldhl	sp,	#4
      000051 7E                     140 	ld	a, (hl)
      000052 D6 04                  141 	sub	a, #0x04
      000054 30 1B                  142 	jr	NC, 00124$
                                    143 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000056 11r00r00               144 	ld	de, #_shadow_OAM+0
      000059 68                     145 	ld	l, b
                                    146 ;	spillPairReg hl
                                    147 ;	spillPairReg hl
      00005A 26 00                  148 	ld	h, #0x00
                                    149 ;	spillPairReg hl
                                    150 ;	spillPairReg hl
      00005C 29                     151 	add	hl, hl
      00005D 29                     152 	add	hl, hl
      00005E 19                     153 	add	hl, de
      00005F 5D                     154 	ld	e, l
      000060 54                     155 	ld	d, h
                                    156 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000061 F8 03                  157 	ldhl	sp,	#3
      000063 3A                     158 	ld	a, (hl-)
      000064 12                     159 	ld	(de), a
      000065 13                     160 	inc	de
      000066 7E                     161 	ld	a, (hl)
      000067 12                     162 	ld	(de), a
                                    163 ;src/test_impl/button_test.c:40: arrow_x += 8;
      000068 7E                     164 	ld	a, (hl)
      000069 C6 08                  165 	add	a, #0x08
                                    166 ;src/test_impl/button_test.c:41: arrow_tile++;
                                    167 ;src/test_impl/button_test.c:37: for (uint8_t t = 0; t < 4; ++t)
      00006B 22                     168 	ld	(hl+), a
      00006C 23                     169 	inc	hl
      00006D 04                     170 	inc	b
      00006E 34                     171 	inc	(hl)
      00006F 18 DE                  172 	jr	00110$
      000071                        173 00124$:
                                    174 ;src/test_impl/button_test.c:43: arrow_y += 8;
      000071 F8 03                  175 	ldhl	sp,	#3
      000073 7E                     176 	ld	a, (hl)
      000074 C6 08                  177 	add	a, #0x08
      000076 77                     178 	ld	(hl), a
                                    179 ;src/test_impl/button_test.c:44: arrow_x = arrow_center_x;
      000077 FAr02r00               180 	ld	a, (#_arrow_center_x)
      00007A F8 02                  181 	ldhl	sp,	#2
      00007C 77                     182 	ld	(hl), a
                                    183 ;src/test_impl/button_test.c:35: for (uint8_t q = 0; q < 4; ++q)
      00007D 0C                     184 	inc	c
      00007E 18 C6                  185 	jr	00113$
      000080                        186 00103$:
                                    187 ;src/test_impl/button_test.c:46: SHOW_SPRITES;
      000080 F0r00                  188 	ldh	a, (_LCDC_REG + 0)
      000082 F6 02                  189 	or	a, #0x02
      000084 E0r00                  190 	ldh	(_LCDC_REG + 0), a
                                    191 ;src/test_impl/button_test.c:47: }
      000086 E8 05                  192 	add	sp, #5
      000088 C9                     193 	ret
                                    194 ;src/test_impl/button_test.c:49: void next_button(uint8_t startIndex) {
                                    195 ;	---------------------------------
                                    196 ; Function next_button
                                    197 ; ---------------------------------
      000089                        198 _next_button::
      000089 E8 FB                  199 	add	sp, #-5
                                    200 ;src/test_impl/button_test.c:50: SPRITES_8x8;
      00008B F0r00                  201 	ldh	a, (_LCDC_REG + 0)
      00008D E6 FB                  202 	and	a, #0xfb
      00008F E0r00                  203 	ldh	(_LCDC_REG + 0), a
                                    204 ;src/test_impl/button_test.c:51: set_sprite_data(64, BUTTONS_TILE_COUNT, BUTTONS);
      000091 11r00r00               205 	ld	de, #_BUTTONS
      000094 D5                     206 	push	de
      000095 21 40 40               207 	ld	hl, #0x4040
      000098 E5                     208 	push	hl
      000099 CDr00r00               209 	call	_set_sprite_data
      00009C E8 04                  210 	add	sp, #4
                                    211 ;src/test_impl/button_test.c:52: uint8_t arrow_tile_idx = 64 + startIndex;
      00009E F8 07                  212 	ldhl	sp,	#7
      0000A0 7E                     213 	ld	a, (hl)
      0000A1 C6 40                  214 	add	a, #0x40
      0000A3 4F                     215 	ld	c, a
                                    216 ;src/test_impl/button_test.c:53: uint8_t arrow_x = arrow_center_x;
      0000A4 FAr02r00               217 	ld	a, (#_arrow_center_x)
      0000A7 F8 02                  218 	ldhl	sp,	#2
                                    219 ;src/test_impl/button_test.c:54: uint8_t arrow_y = 64;
      0000A9 22                     220 	ld	(hl+), a
      0000AA 36 40                  221 	ld	(hl), #0x40
                                    222 ;src/test_impl/button_test.c:55: for (uint8_t i = 16; i < 32; ++i)
      0000AC 1E 10                  223 	ld	e, #0x10
      0000AE                        224 00107$:
      0000AE 7B                     225 	ld	a, e
      0000AF D6 20                  226 	sub	a, #0x20
      0000B1 30 1C                  227 	jr	NC, 00101$
                                    228 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0000B3 F8 00                  229 	ldhl	sp,	#0
      0000B5 7B                     230 	ld	a, e
      0000B6 22                     231 	ld	(hl+), a
      0000B7 AF                     232 	xor	a, a
      0000B8 32                     233 	ld	(hl-), a
      0000B9 2A                     234 	ld	a, (hl+)
      0000BA 46                     235 	ld	b, (hl)
      0000BB 87                     236 	add	a, a
      0000BC CB 10                  237 	rl	b
      0000BE 87                     238 	add	a, a
      0000BF CB 10                  239 	rl	b
      0000C1 C6r00                  240 	add	a, #<(_shadow_OAM)
      0000C3 6F                     241 	ld	l, a
                                    242 ;	spillPairReg hl
                                    243 ;	spillPairReg hl
      0000C4 78                     244 	ld	a, b
      0000C5 CEs00                  245 	adc	a, #>(_shadow_OAM)
      0000C7 67                     246 	ld	h, a
                                    247 ;	spillPairReg hl
                                    248 ;	spillPairReg hl
      0000C8 23                     249 	inc	hl
      0000C9 23                     250 	inc	hl
      0000CA 71                     251 	ld	(hl), c
                                    252 ;src/test_impl/button_test.c:58: arrow_tile_idx += 1;
      0000CB 0C                     253 	inc	c
                                    254 ;src/test_impl/button_test.c:55: for (uint8_t i = 16; i < 32; ++i)
      0000CC 1C                     255 	inc	e
      0000CD 18 DF                  256 	jr	00107$
      0000CF                        257 00101$:
                                    258 ;src/test_impl/button_test.c:60: uint8_t arrow_tile = 16;
                                    259 ;src/test_impl/button_test.c:61: for (uint8_t q = 0; q < 4; ++q)
      0000CF 01 00 10               260 	ld	bc, #0x1000
      0000D2                        261 00113$:
      0000D2 79                     262 	ld	a, c
      0000D3 D6 04                  263 	sub	a, #0x04
      0000D5 30 35                  264 	jr	NC, 00103$
                                    265 ;src/test_impl/button_test.c:63: for (uint8_t t = 0; t < 4; ++t)
      0000D7 F8 04                  266 	ldhl	sp,	#4
      0000D9 36 00                  267 	ld	(hl), #0x00
      0000DB                        268 00110$:
      0000DB F8 04                  269 	ldhl	sp,	#4
      0000DD 7E                     270 	ld	a, (hl)
      0000DE D6 04                  271 	sub	a, #0x04
      0000E0 30 1B                  272 	jr	NC, 00124$
                                    273 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0000E2 11r00r00               274 	ld	de, #_shadow_OAM+0
      0000E5 68                     275 	ld	l, b
                                    276 ;	spillPairReg hl
                                    277 ;	spillPairReg hl
      0000E6 26 00                  278 	ld	h, #0x00
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      0000E8 29                     281 	add	hl, hl
      0000E9 29                     282 	add	hl, hl
      0000EA 19                     283 	add	hl, de
      0000EB 5D                     284 	ld	e, l
      0000EC 54                     285 	ld	d, h
                                    286 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0000ED F8 03                  287 	ldhl	sp,	#3
      0000EF 3A                     288 	ld	a, (hl-)
      0000F0 12                     289 	ld	(de), a
      0000F1 13                     290 	inc	de
      0000F2 7E                     291 	ld	a, (hl)
      0000F3 12                     292 	ld	(de), a
                                    293 ;src/test_impl/button_test.c:66: arrow_x += 8;
      0000F4 7E                     294 	ld	a, (hl)
      0000F5 C6 08                  295 	add	a, #0x08
                                    296 ;src/test_impl/button_test.c:67: arrow_tile++;
                                    297 ;src/test_impl/button_test.c:63: for (uint8_t t = 0; t < 4; ++t)
      0000F7 22                     298 	ld	(hl+), a
      0000F8 23                     299 	inc	hl
      0000F9 04                     300 	inc	b
      0000FA 34                     301 	inc	(hl)
      0000FB 18 DE                  302 	jr	00110$
      0000FD                        303 00124$:
                                    304 ;src/test_impl/button_test.c:69: arrow_y += 8;
      0000FD F8 03                  305 	ldhl	sp,	#3
      0000FF 7E                     306 	ld	a, (hl)
      000100 C6 08                  307 	add	a, #0x08
      000102 77                     308 	ld	(hl), a
                                    309 ;src/test_impl/button_test.c:70: arrow_x = arrow_center_x;
      000103 FAr02r00               310 	ld	a, (#_arrow_center_x)
      000106 F8 02                  311 	ldhl	sp,	#2
      000108 77                     312 	ld	(hl), a
                                    313 ;src/test_impl/button_test.c:61: for (uint8_t q = 0; q < 4; ++q)
      000109 0C                     314 	inc	c
      00010A 18 C6                  315 	jr	00113$
      00010C                        316 00103$:
                                    317 ;src/test_impl/button_test.c:72: SHOW_SPRITES;
      00010C F0r00                  318 	ldh	a, (_LCDC_REG + 0)
      00010E F6 02                  319 	or	a, #0x02
      000110 E0r00                  320 	ldh	(_LCDC_REG + 0), a
                                    321 ;src/test_impl/button_test.c:73: }
      000112 E8 05                  322 	add	sp, #5
      000114 C9                     323 	ret
                                    324 ;src/test_impl/button_test.c:75: void cleanup_arrow_sprites() {
                                    325 ;	---------------------------------
                                    326 ; Function cleanup_arrow_sprites
                                    327 ; ---------------------------------
      000115                        328 _cleanup_arrow_sprites::
                                    329 ;src/test_impl/button_test.c:76: for (uint8_t q = 0; q < 32; ++q)
      000115 0E 00                  330 	ld	c, #0x00
      000117                        331 00104$:
      000117 79                     332 	ld	a, c
      000118 D6 20                  333 	sub	a, #0x20
      00011A 30 0F                  334 	jr	NC, 00101$
                                    335 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00011C 11r00r00               336 	ld	de, #_shadow_OAM+0
      00011F 69                     337 	ld	l, c
                                    338 ;	spillPairReg hl
                                    339 ;	spillPairReg hl
      000120 26 00                  340 	ld	h, #0x00
                                    341 ;	spillPairReg hl
                                    342 ;	spillPairReg hl
      000122 29                     343 	add	hl, hl
      000123 29                     344 	add	hl, hl
      000124 19                     345 	add	hl, de
                                    346 ;X:/gbc_hacks/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000125 AF                     347 	xor	a, a
      000126 22                     348 	ld	(hl+), a
      000127 77                     349 	ld	(hl), a
                                    350 ;src/test_impl/button_test.c:76: for (uint8_t q = 0; q < 32; ++q)
      000128 0C                     351 	inc	c
      000129 18 EC                  352 	jr	00104$
      00012B                        353 00101$:
                                    354 ;src/test_impl/button_test.c:80: HIDE_SPRITES;
      00012B F0r00                  355 	ldh	a, (_LCDC_REG + 0)
      00012D E6 FD                  356 	and	a, #0xfd
      00012F E0r00                  357 	ldh	(_LCDC_REG + 0), a
                                    358 ;src/test_impl/button_test.c:81: }
      000131 C9                     359 	ret
                                    360 ;src/test_impl/button_test.c:83: void button_test_blank() {
                                    361 ;	---------------------------------
                                    362 ; Function button_test_blank
                                    363 ; ---------------------------------
      000132                        364 _button_test_blank::
                                    365 ;src/test_impl/button_test.c:84: blank_display();
      000132 CDr00r00               366 	call	_blank_display
                                    367 ;src/test_impl/button_test.c:85: wait_vbl_done();
      000135 CDr00r00               368 	call	_wait_vbl_done
                                    369 ;src/test_impl/button_test.c:86: text_load_font();
      000138 CDr00r00               370 	call	_text_load_font
                                    371 ;src/test_impl/button_test.c:87: text_print_string_bkg(3, 2, "Press the button");
      00013B 11r56r01               372 	ld	de, #___str_0
      00013E D5                     373 	push	de
      00013F 21 03 02               374 	ld	hl, #0x203
      000142 E5                     375 	push	hl
      000143 CDr00r00               376 	call	_text_print_string_bkg
      000146 E8 04                  377 	add	sp, #4
                                    378 ;src/test_impl/button_test.c:88: text_print_string_bkg(6, 3, "indicated");
      000148 11r67r01               379 	ld	de, #___str_1
      00014B D5                     380 	push	de
      00014C 21 06 03               381 	ld	hl, #0x306
      00014F E5                     382 	push	hl
      000150 CDr00r00               383 	call	_text_print_string_bkg
      000153 E8 04                  384 	add	sp, #4
                                    385 ;src/test_impl/button_test.c:89: }
      000155 C9                     386 	ret
      000156                        387 ___str_0:
      000156 50 72 65 73 73 20 74   388 	.ascii "Press the button"
             68 65 20 62 75 74 74
             6F 6E
      000166 00                     389 	.db 0x00
      000167                        390 ___str_1:
      000167 69 6E 64 69 63 61 74   391 	.ascii "indicated"
             65 64
      000170 00                     392 	.db 0x00
                                    393 ;src/test_impl/button_test.c:91: void buttons_sequence() {
                                    394 ;	---------------------------------
                                    395 ; Function buttons_sequence
                                    396 ; ---------------------------------
      000171                        397 _buttons_sequence::
                                    398 ;src/test_impl/button_test.c:94: button_test_blank();
      000171 CDr32r01               399 	call	_button_test_blank
                                    400 ;src/test_impl/button_test.c:95: next_button(0);
      000174 AF                     401 	xor	a, a
      000175 F5                     402 	push	af
      000176 33                     403 	inc	sp
      000177 CDr89r00               404 	call	_next_button
      00017A 33                     405 	inc	sp
                                    406 ;src/test_impl/button_test.c:96: waitpad(J_A);
      00017B 3E 10                  407 	ld	a, #0x10
      00017D F5                     408 	push	af
      00017E 33                     409 	inc	sp
      00017F CDr00r00               410 	call	_waitpad
      000182 33                     411 	inc	sp
                                    412 ;src/test_impl/button_test.c:97: delay(100);
      000183 11 64 00               413 	ld	de, #0x0064
      000186 D5                     414 	push	de
      000187 CDr00r00               415 	call	_delay
      00018A E1                     416 	pop	hl
                                    417 ;src/test_impl/button_test.c:99: next_button(16);
      00018B 3E 10                  418 	ld	a, #0x10
      00018D F5                     419 	push	af
      00018E 33                     420 	inc	sp
      00018F CDr89r00               421 	call	_next_button
      000192 33                     422 	inc	sp
                                    423 ;src/test_impl/button_test.c:100: waitpad(J_B);
      000193 3E 20                  424 	ld	a, #0x20
      000195 F5                     425 	push	af
      000196 33                     426 	inc	sp
      000197 CDr00r00               427 	call	_waitpad
      00019A 33                     428 	inc	sp
                                    429 ;src/test_impl/button_test.c:101: delay(100);
      00019B 11 64 00               430 	ld	de, #0x0064
      00019E D5                     431 	push	de
      00019F CDr00r00               432 	call	_delay
      0001A2 E1                     433 	pop	hl
                                    434 ;src/test_impl/button_test.c:103: button_test_blank();
      0001A3 CDr32r01               435 	call	_button_test_blank
                                    436 ;src/test_impl/button_test.c:104: text_print_string_bkg(mid_screen-2, 12, "SELECT");
      0001A6 11rF4r01               437 	ld	de, #___str_2
      0001A9 D5                     438 	push	de
      0001AA 21 08 0C               439 	ld	hl, #0xc08
      0001AD E5                     440 	push	hl
      0001AE CDr00r00               441 	call	_text_print_string_bkg
      0001B1 E8 04                  442 	add	sp, #4
                                    443 ;src/test_impl/button_test.c:105: next_button(32);
      0001B3 3E 20                  444 	ld	a, #0x20
      0001B5 F5                     445 	push	af
      0001B6 33                     446 	inc	sp
      0001B7 CDr89r00               447 	call	_next_button
      0001BA 33                     448 	inc	sp
                                    449 ;src/test_impl/button_test.c:106: waitpad(J_SELECT);
      0001BB 3E 40                  450 	ld	a, #0x40
      0001BD F5                     451 	push	af
      0001BE 33                     452 	inc	sp
      0001BF CDr00r00               453 	call	_waitpad
      0001C2 33                     454 	inc	sp
                                    455 ;src/test_impl/button_test.c:107: delay(100);
      0001C3 11 64 00               456 	ld	de, #0x0064
      0001C6 D5                     457 	push	de
      0001C7 CDr00r00               458 	call	_delay
      0001CA E1                     459 	pop	hl
                                    460 ;src/test_impl/button_test.c:109: button_test_blank();
      0001CB CDr32r01               461 	call	_button_test_blank
                                    462 ;src/test_impl/button_test.c:110: text_print_string_bkg(mid_screen-2, 12, "START");
      0001CE 11rFBr01               463 	ld	de, #___str_3
      0001D1 D5                     464 	push	de
      0001D2 21 08 0C               465 	ld	hl, #0xc08
      0001D5 E5                     466 	push	hl
      0001D6 CDr00r00               467 	call	_text_print_string_bkg
      0001D9 E8 04                  468 	add	sp, #4
                                    469 ;src/test_impl/button_test.c:111: next_button(48);
      0001DB 3E 30                  470 	ld	a, #0x30
      0001DD F5                     471 	push	af
      0001DE 33                     472 	inc	sp
      0001DF CDr89r00               473 	call	_next_button
      0001E2 33                     474 	inc	sp
                                    475 ;src/test_impl/button_test.c:112: waitpad(J_START);
      0001E3 3E 80                  476 	ld	a, #0x80
      0001E5 F5                     477 	push	af
      0001E6 33                     478 	inc	sp
      0001E7 CDr00r00               479 	call	_waitpad
      0001EA 33                     480 	inc	sp
                                    481 ;src/test_impl/button_test.c:113: delay(100);
      0001EB 11 64 00               482 	ld	de, #0x0064
      0001EE D5                     483 	push	de
      0001EF CDr00r00               484 	call	_delay
      0001F2 E1                     485 	pop	hl
                                    486 ;src/test_impl/button_test.c:114: }
      0001F3 C9                     487 	ret
      0001F4                        488 ___str_2:
      0001F4 53 45 4C 45 43 54      489 	.ascii "SELECT"
      0001FA 00                     490 	.db 0x00
      0001FB                        491 ___str_3:
      0001FB 53 54 41 52 54         492 	.ascii "START"
      000200 00                     493 	.db 0x00
                                    494 ;src/test_impl/button_test.c:116: int button_test() {
                                    495 ;	---------------------------------
                                    496 ; Function button_test
                                    497 ; ---------------------------------
      000201                        498 _button_test::
      000201 E8 FD                  499 	add	sp, #-3
                                    500 ;src/test_impl/button_test.c:117: PRINT_FUNC_INFO;
      000203 11r19r04               501 	ld	de, #___str_6
      000206 D5                     502 	push	de
      000207 11 75 00               503 	ld	de, #0x0075
      00020A D5                     504 	push	de
      00020B 11rFDr03               505 	ld	de, #___str_5
      00020E D5                     506 	push	de
      00020F 11rE8r03               507 	ld	de, #___str_4
      000212 D5                     508 	push	de
      000213 CDr00r00               509 	call	_EMU_printf
      000216 E8 08                  510 	add	sp, #8
                                    511 ;src/test_impl/button_test.c:120: uint8_t arrow_index = 0;
      000218 F8 00                  512 	ldhl	sp,	#0
      00021A 36 00                  513 	ld	(hl), #0x00
                                    514 ;src/test_impl/button_test.c:121: button_test_blank();
      00021C CDr32r01               515 	call	_button_test_blank
                                    516 ;src/test_impl/button_test.c:122: next_arrow(arrow_index);
      00021F AF                     517 	xor	a, a
      000220 F5                     518 	push	af
      000221 33                     519 	inc	sp
      000222 CDr00r00               520 	call	_next_arrow
      000225 33                     521 	inc	sp
                                    522 ;src/test_impl/button_test.c:123: wait_vbl_done();
      000226 CDr00r00               523 	call	_wait_vbl_done
                                    524 ;src/test_impl/button_test.c:124: while (1) {
      000229                        525 00140$:
                                    526 ;src/test_impl/button_test.c:125: if (primaryButtonBits.up == 0) {
      000229 FAr00r00               527 	ld	a, (#_primaryButtonBits + 0)
      00022C CB 37                  528 	swap	a
      00022E E6 01                  529 	and	a,#0x01
      000230 20 06                  530 	jr	NZ, 00116$
                                    531 ;src/test_impl/button_test.c:126: arrow_index = 0;
      000232 F8 00                  532 	ldhl	sp,	#0
      000234 36 00                  533 	ld	(hl), #0x00
      000236 18 58                  534 	jr	00117$
      000238                        535 00116$:
                                    536 ;src/test_impl/button_test.c:127: } else if (primaryButtonBits.up && primaryButtonBits.right == 0) {
      000238 FAr00r00               537 	ld	a, (#_primaryButtonBits)
      00023B CB 37                  538 	swap	a
      00023D E6 01                  539 	and	a,#0x01
      00023F 28 0C                  540 	jr	Z, 00112$
      000241 FAr00r00               541 	ld	a, (#_primaryButtonBits + 0)
      000244 07                     542 	rlca
      000245 38 06                  543 	jr	C, 00112$
                                    544 ;src/test_impl/button_test.c:128: arrow_index = 16;
      000247 F8 00                  545 	ldhl	sp,	#0
      000249 36 10                  546 	ld	(hl), #0x10
      00024B 18 43                  547 	jr	00117$
      00024D                        548 00112$:
                                    549 ;src/test_impl/button_test.c:129: } else if (primaryButtonBits.up && primaryButtonBits.right && primaryButtonBits.down == 0) {
      00024D FAr00r00               550 	ld	a, (#_primaryButtonBits)
      000250 CB 37                  551 	swap	a
      000252 E6 01                  552 	and	a,#0x01
      000254 28 16                  553 	jr	Z, 00107$
      000256 FAr00r00               554 	ld	a, (#_primaryButtonBits + 0)
      000259 07                     555 	rlca
      00025A 30 10                  556 	jr	NC, 00107$
      00025C FAr00r00               557 	ld	a, (#_primaryButtonBits + 0)
      00025F CB 37                  558 	swap	a
      000261 0F                     559 	rrca
      000262 E6 01                  560 	and	a,#0x01
      000264 20 06                  561 	jr	NZ, 00107$
                                    562 ;src/test_impl/button_test.c:130: arrow_index = 32;
      000266 F8 00                  563 	ldhl	sp,	#0
      000268 36 20                  564 	ld	(hl), #0x20
      00026A 18 24                  565 	jr	00117$
      00026C                        566 00107$:
                                    567 ;src/test_impl/button_test.c:131: } else if (primaryButtonBits.up && primaryButtonBits.right && primaryButtonBits.down && primaryButtonBits.left == 0) {
      00026C FAr00r00               568 	ld	a, (#_primaryButtonBits)
      00026F CB 37                  569 	swap	a
      000271 E6 01                  570 	and	a,#0x01
      000273 28 1B                  571 	jr	Z, 00117$
      000275 FAr00r00               572 	ld	a, (#_primaryButtonBits + 0)
      000278 07                     573 	rlca
      000279 30 15                  574 	jr	NC, 00117$
      00027B FAr00r00               575 	ld	a, (#_primaryButtonBits + 0)
      00027E CB 37                  576 	swap	a
      000280 0F                     577 	rrca
      000281 E6 01                  578 	and	a,#0x01
      000283 28 0B                  579 	jr	Z, 00117$
      000285 FAr00r00               580 	ld	a, (#_primaryButtonBits + 0)
      000288 07                     581 	rlca
      000289 07                     582 	rlca
      00028A 38 04                  583 	jr	C, 00117$
                                    584 ;src/test_impl/button_test.c:132: arrow_index = 48;
      00028C F8 00                  585 	ldhl	sp,	#0
      00028E 36 30                  586 	ld	(hl), #0x30
      000290                        587 00117$:
                                    588 ;src/test_impl/button_test.c:134: if (primaryButtonBits.up && primaryButtonBits.left && primaryButtonBits.down && primaryButtonBits.right) {
      000290 FAr00r00               589 	ld	a, (#_primaryButtonBits)
      000293 CB 37                  590 	swap	a
      000295 E6 01                  591 	and	a,#0x01
      000297 28 18                  592 	jr	Z, 00119$
      000299 FAr00r00               593 	ld	a, (#_primaryButtonBits + 0)
      00029C 07                     594 	rlca
      00029D 07                     595 	rlca
      00029E 30 11                  596 	jr	NC, 00119$
      0002A0 FAr00r00               597 	ld	a, (#_primaryButtonBits + 0)
      0002A3 CB 37                  598 	swap	a
      0002A5 0F                     599 	rrca
      0002A6 E6 01                  600 	and	a,#0x01
      0002A8 28 07                  601 	jr	Z, 00119$
      0002AA FAr00r00               602 	ld	a, (#_primaryButtonBits + 0)
      0002AD 07                     603 	rlca
      0002AE DArCBr03               604 	jp	C, 00141$
                                    605 ;src/test_impl/button_test.c:135: break;
      0002B1                        606 00119$:
                                    607 ;src/test_impl/button_test.c:137: next_arrow(arrow_index);
      0002B1 F8 00                  608 	ldhl	sp,	#0
      0002B3 7E                     609 	ld	a, (hl)
      0002B4 F5                     610 	push	af
      0002B5 33                     611 	inc	sp
      0002B6 CDr00r00               612 	call	_next_arrow
      0002B9 33                     613 	inc	sp
                                    614 ;src/test_impl/button_test.c:138: wait_vbl_done();
      0002BA CDr00r00               615 	call	_wait_vbl_done
                                    616 ;src/test_impl/button_test.c:139: if (primaryButtonBits.up == 0) {
      0002BD FAr00r00               617 	ld	a, (#_primaryButtonBits)
      0002C0 CB 37                  618 	swap	a
      0002C2 E6 01                  619 	and	a,#0x01
      0002C4 20 17                  620 	jr	NZ, 00124$
                                    621 ;src/test_impl/button_test.c:140: primaryButtonBits.up = ((joypad() & J_UP) ? 1:0);
      0002C6 01r00r00               622 	ld	bc, #_primaryButtonBits
      0002C9 CDr00r00               623 	call	_joypad
      0002CC CB 53                  624 	bit	2, e
      0002CE 3E 01                  625 	ld	a, #0x01
      0002D0 20 01                  626 	jr	NZ, 00145$
      0002D2 AF                     627 	xor	a, a
      0002D3                        628 00145$:
      0002D3 CB 37                  629 	swap	a
      0002D5 E6 10                  630 	and	a, #0x10
      0002D7 6F                     631 	ld	l, a
      0002D8 0A                     632 	ld	a, (bc)
      0002D9 E6 EF                  633 	and	a, #0xef
      0002DB B5                     634 	or	a, l
      0002DC 02                     635 	ld	(bc), a
      0002DD                        636 00124$:
                                    637 ;src/test_impl/button_test.c:142: if (primaryButtonBits.down == 0) {
      0002DD FAr00r00               638 	ld	a, (#_primaryButtonBits + 0)
      0002E0 CB 37                  639 	swap	a
      0002E2 0F                     640 	rrca
      0002E3 E6 01                  641 	and	a,#0x01
      0002E5 20 26                  642 	jr	NZ, 00126$
                                    643 ;src/test_impl/button_test.c:143: primaryButtonBits.down = ((joypad() & J_DOWN) ? 1:0);
      0002E7 CDr00r00               644 	call	_joypad
      0002EA CB 5B                  645 	bit	3, e
      0002EC 28 09                  646 	jr	Z, 00146$
      0002EE F8 01                  647 	ldhl	sp,	#1
      0002F0 3E 01                  648 	ld	a, #0x01
      0002F2 22                     649 	ld	(hl+), a
      0002F3 AF                     650 	xor	a, a
      0002F4 77                     651 	ld	(hl), a
      0002F5 18 05                  652 	jr	00147$
      0002F7                        653 00146$:
      0002F7 AF                     654 	xor	a, a
      0002F8 F8 01                  655 	ldhl	sp,	#1
      0002FA 22                     656 	ld	(hl+), a
      0002FB 77                     657 	ld	(hl), a
      0002FC                        658 00147$:
      0002FC F8 01                  659 	ldhl	sp,	#1
      0002FE 7E                     660 	ld	a, (hl)
      0002FF 21r00r00               661 	ld	hl, #_primaryButtonBits
      000302 CB 37                  662 	swap	a
      000304 07                     663 	rlca
      000305 E6 20                  664 	and	a, #0x20
      000307 4F                     665 	ld	c, a
      000308 7E                     666 	ld	a, (hl)
      000309 E6 DF                  667 	and	a, #0xdf
      00030B B1                     668 	or	a, c
      00030C 77                     669 	ld	(hl), a
      00030D                        670 00126$:
                                    671 ;src/test_impl/button_test.c:145: if (primaryButtonBits.left == 0) {
      00030D FAr00r00               672 	ld	a, (#_primaryButtonBits + 0)
      000310 07                     673 	rlca
      000311 07                     674 	rlca
      000312 38 17                  675 	jr	C, 00128$
                                    676 ;src/test_impl/button_test.c:146: primaryButtonBits.left = ((joypad() & J_LEFT) ? 1:0);
      000314 01r00r00               677 	ld	bc, #_primaryButtonBits
      000317 CDr00r00               678 	call	_joypad
      00031A CB 4B                  679 	bit	1, e
      00031C 3E 01                  680 	ld	a, #0x01
      00031E 20 01                  681 	jr	NZ, 00149$
      000320 AF                     682 	xor	a, a
      000321                        683 00149$:
      000321 0F                     684 	rrca
      000322 0F                     685 	rrca
      000323 E6 40                  686 	and	a, #0x40
      000325 6F                     687 	ld	l, a
      000326 0A                     688 	ld	a, (bc)
      000327 E6 BF                  689 	and	a, #0xbf
      000329 B5                     690 	or	a, l
      00032A 02                     691 	ld	(bc), a
      00032B                        692 00128$:
                                    693 ;src/test_impl/button_test.c:148: if (primaryButtonBits.right == 0) {
      00032B FAr00r00               694 	ld	a, (#_primaryButtonBits + 0)
      00032E 07                     695 	rlca
      00032F 38 18                  696 	jr	C, 00130$
                                    697 ;src/test_impl/button_test.c:149: primaryButtonBits.right = ((joypad() & J_RIGHT) ? 1:0);
      000331 01r00r00               698 	ld	bc, #_primaryButtonBits
      000334 CDr00r00               699 	call	_joypad
      000337 7B                     700 	ld	a, e
      000338 0F                     701 	rrca
      000339 30 04                  702 	jr	NC, 00150$
      00033B 3E 01                  703 	ld	a, #0x01
      00033D 18 01                  704 	jr	00151$
      00033F                        705 00150$:
      00033F AF                     706 	xor	a, a
      000340                        707 00151$:
      000340 0F                     708 	rrca
      000341 E6 80                  709 	and	a, #0x80
      000343 6F                     710 	ld	l, a
      000344 0A                     711 	ld	a, (bc)
      000345 E6 7F                  712 	and	a, #0x7f
      000347 B5                     713 	or	a, l
      000348 02                     714 	ld	(bc), a
      000349                        715 00130$:
                                    716 ;src/test_impl/button_test.c:151: if (primaryButtonBits.select == 0) {
      000349 FAr00r00               717 	ld	a, (#_primaryButtonBits + 0)
      00034C CB 37                  718 	swap	a
      00034E 07                     719 	rlca
      00034F 38 18                  720 	jr	C, 00132$
                                    721 ;src/test_impl/button_test.c:152: primaryButtonBits.select = ((joypad() & J_SELECT) ? 1:0);
      000351 01r00r00               722 	ld	bc, #_primaryButtonBits
      000354 CDr00r00               723 	call	_joypad
      000357 CB 73                  724 	bit	6, e
      000359 3E 01                  725 	ld	a, #0x01
      00035B 20 01                  726 	jr	NZ, 00153$
      00035D AF                     727 	xor	a, a
      00035E                        728 00153$:
      00035E CB 37                  729 	swap	a
      000360 0F                     730 	rrca
      000361 E6 08                  731 	and	a, #0x08
      000363 6F                     732 	ld	l, a
      000364 0A                     733 	ld	a, (bc)
      000365 E6 F7                  734 	and	a, #0xf7
      000367 B5                     735 	or	a, l
      000368 02                     736 	ld	(bc), a
      000369                        737 00132$:
                                    738 ;src/test_impl/button_test.c:154: if (primaryButtonBits.start == 0) {
      000369 FAr00r00               739 	ld	a, (#_primaryButtonBits + 0)
      00036C 0F                     740 	rrca
      00036D 0F                     741 	rrca
      00036E E6 01                  742 	and	a,#0x01
      000370 20 19                  743 	jr	NZ, 00134$
                                    744 ;src/test_impl/button_test.c:155: primaryButtonBits.start = ((joypad() & J_START) ? 1:0);
      000372 01r00r00               745 	ld	bc, #_primaryButtonBits
      000375 CDr00r00               746 	call	_joypad
      000378 7B                     747 	ld	a, e
      000379 07                     748 	rlca
      00037A 30 04                  749 	jr	NC, 00154$
      00037C 3E 01                  750 	ld	a, #0x01
      00037E 18 01                  751 	jr	00155$
      000380                        752 00154$:
      000380 AF                     753 	xor	a, a
      000381                        754 00155$:
      000381 07                     755 	rlca
      000382 07                     756 	rlca
      000383 E6 04                  757 	and	a, #0x04
      000385 6F                     758 	ld	l, a
      000386 0A                     759 	ld	a, (bc)
      000387 E6 FB                  760 	and	a, #0xfb
      000389 B5                     761 	or	a, l
      00038A 02                     762 	ld	(bc), a
      00038B                        763 00134$:
                                    764 ;src/test_impl/button_test.c:157: if (primaryButtonBits.a == 0) {
      00038B FAr00r00               765 	ld	a, (#_primaryButtonBits + 0)
      00038E E6 01                  766 	and	a,#0x01
      000390 20 15                  767 	jr	NZ, 00136$
                                    768 ;src/test_impl/button_test.c:158: primaryButtonBits.a = ((joypad() & J_A) ? 1:0);
      000392 01r00r00               769 	ld	bc, #_primaryButtonBits
      000395 CDr00r00               770 	call	_joypad
      000398 CB 63                  771 	bit	4, e
      00039A 3E 01                  772 	ld	a, #0x01
      00039C 20 01                  773 	jr	NZ, 00157$
      00039E AF                     774 	xor	a, a
      00039F                        775 00157$:
      00039F E6 01                  776 	and	a, #0x01
      0003A1 6F                     777 	ld	l, a
      0003A2 0A                     778 	ld	a, (bc)
      0003A3 E6 FE                  779 	and	a, #0xfe
      0003A5 B5                     780 	or	a, l
      0003A6 02                     781 	ld	(bc), a
      0003A7                        782 00136$:
                                    783 ;src/test_impl/button_test.c:160: if (primaryButtonBits.b == 0) {
      0003A7 FAr00r00               784 	ld	a, (#_primaryButtonBits + 0)
      0003AA 0F                     785 	rrca
      0003AB E6 01                  786 	and	a,#0x01
      0003AD 20 16                  787 	jr	NZ, 00138$
                                    788 ;src/test_impl/button_test.c:161: primaryButtonBits.b = ((joypad() & J_B) ? 1:0);
      0003AF 01r00r00               789 	ld	bc, #_primaryButtonBits
      0003B2 CDr00r00               790 	call	_joypad
      0003B5 CB 6B                  791 	bit	5, e
      0003B7 3E 01                  792 	ld	a, #0x01
      0003B9 20 01                  793 	jr	NZ, 00159$
      0003BB AF                     794 	xor	a, a
      0003BC                        795 00159$:
      0003BC 07                     796 	rlca
      0003BD E6 02                  797 	and	a, #0x02
      0003BF 6F                     798 	ld	l, a
      0003C0 0A                     799 	ld	a, (bc)
      0003C1 E6 FD                  800 	and	a, #0xfd
      0003C3 B5                     801 	or	a, l
      0003C4 02                     802 	ld	(bc), a
      0003C5                        803 00138$:
                                    804 ;src/test_impl/button_test.c:163: waitpadup();
      0003C5 CDr00r00               805 	call	_waitpadup
      0003C8 C3r29r02               806 	jp	00140$
      0003CB                        807 00141$:
                                    808 ;src/test_impl/button_test.c:166: cleanup_arrow_sprites();
      0003CB CDr15r01               809 	call	_cleanup_arrow_sprites
                                    810 ;src/test_impl/button_test.c:167: buttons_sequence();
      0003CE CDr71r01               811 	call	_buttons_sequence
                                    812 ;src/test_impl/button_test.c:169: cleanup_arrow_sprites();
      0003D1 CDr15r01               813 	call	_cleanup_arrow_sprites
                                    814 ;src/test_impl/button_test.c:170: blank_display();
      0003D4 CDr00r00               815 	call	_blank_display
                                    816 ;src/test_impl/button_test.c:171: wait_vbl_done();
      0003D7 CDr00r00               817 	call	_wait_vbl_done
                                    818 ;src/test_impl/button_test.c:172: delay(1000);
      0003DA 11 E8 03               819 	ld	de, #0x03e8
      0003DD D5                     820 	push	de
      0003DE CDr00r00               821 	call	_delay
      0003E1 E1                     822 	pop	hl
                                    823 ;src/test_impl/button_test.c:173: return TEST_PASSED;
      0003E2 11 25 00               824 	ld	de, #0x0025
                                    825 ;src/test_impl/button_test.c:174: }
      0003E5 E8 03                  826 	add	sp, #3
      0003E7 C9                     827 	ret
      0003E8                        828 ___str_4:
      0003E8 5B 44 42 47 5D 20 28   829 	.ascii "[DBG] (%s:%d @ %s())"
             25 73 3A 25 64 20 40
             20 25 73 28 29 29
      0003FC 00                     830 	.db 0x00
      0003FD                        831 ___str_5:
      0003FD 73 72 63 2F 74 65 73   832 	.ascii "src/test_impl/button_test.c"
             74 5F 69 6D 70 6C 2F
             62 75 74 74 6F 6E 5F
             74 65 73 74 2E 63
      000418 00                     833 	.db 0x00
      000419                        834 ___str_6:
      000419 62 75 74 74 6F 6E 5F   835 	.ascii "button_test"
             74 65 73 74
      000424 00                     836 	.db 0x00
                                    837 	.area _CODE
                                    838 	.area _INITIALIZER
      000000                        839 __xinit____EMU_PROFILER_INIT:
      000000r00r00                  840 	.dw _EMU_profiler_message
      000002                        841 __xinit__arrow_center_x:
      000002 48                     842 	.db #0x48	; 72	'H'
                                    843 	.area _CABS (ABS)
